"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunkclarity"] = globalThis["webpackChunkclarity"] || []).push([["vendors-node_modules_mermaid_dist_index-2c4b9a3b_js"],{

/***/ "./node_modules/dagre-d3-es/src/graphlib/json.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   read: () => (/* binding */ read),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/lodash-es/isUndefined.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/lodash-es/clone.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/lodash-es/map.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/lodash-es/forEach.js\");\n/* harmony import */ var _graph_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/dagre-d3-es/src/graphlib/graph.js\");\n\n\n\n\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](g.graph())) {\n    json.value = lodash_es__WEBPACK_IMPORTED_MODULE_2__[\"default\"](g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return lodash_es__WEBPACK_IMPORTED_MODULE_3__[\"default\"](g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return lodash_es__WEBPACK_IMPORTED_MODULE_3__[\"default\"](g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](e.name)) {\n      edge.name = e.name;\n    }\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new _graph_js__WEBPACK_IMPORTED_MODULE_0__.Graph(json.options).setGraph(json.value);\n  lodash_es__WEBPACK_IMPORTED_MODULE_4__[\"default\"](json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  lodash_es__WEBPACK_IMPORTED_MODULE_4__[\"default\"](json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGFncmUtZDMtZXMvc3JjL2dyYXBobGliL2pzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsYXJpdHkvLi9ub2RlX21vZHVsZXMvZGFncmUtZDMtZXMvc3JjL2dyYXBobGliL2pzb24uanM/YzE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBHcmFwaCB9IGZyb20gJy4vZ3JhcGguanMnO1xuXG5leHBvcnQgeyB3cml0ZSwgcmVhZCB9O1xuXG5mdW5jdGlvbiB3cml0ZShnKSB7XG4gIHZhciBqc29uID0ge1xuICAgIG9wdGlvbnM6IHtcbiAgICAgIGRpcmVjdGVkOiBnLmlzRGlyZWN0ZWQoKSxcbiAgICAgIG11bHRpZ3JhcGg6IGcuaXNNdWx0aWdyYXBoKCksXG4gICAgICBjb21wb3VuZDogZy5pc0NvbXBvdW5kKCksXG4gICAgfSxcbiAgICBub2Rlczogd3JpdGVOb2RlcyhnKSxcbiAgICBlZGdlczogd3JpdGVFZGdlcyhnKSxcbiAgfTtcbiAgaWYgKCFfLmlzVW5kZWZpbmVkKGcuZ3JhcGgoKSkpIHtcbiAgICBqc29uLnZhbHVlID0gXy5jbG9uZShnLmdyYXBoKCkpO1xuICB9XG4gIHJldHVybiBqc29uO1xufVxuXG5mdW5jdGlvbiB3cml0ZU5vZGVzKGcpIHtcbiAgcmV0dXJuIF8ubWFwKGcubm9kZXMoKSwgZnVuY3Rpb24gKHYpIHtcbiAgICB2YXIgbm9kZVZhbHVlID0gZy5ub2RlKHYpO1xuICAgIHZhciBwYXJlbnQgPSBnLnBhcmVudCh2KTtcbiAgICB2YXIgbm9kZSA9IHsgdjogdiB9O1xuICAgIGlmICghXy5pc1VuZGVmaW5lZChub2RlVmFsdWUpKSB7XG4gICAgICBub2RlLnZhbHVlID0gbm9kZVZhbHVlO1xuICAgIH1cbiAgICBpZiAoIV8uaXNVbmRlZmluZWQocGFyZW50KSkge1xuICAgICAgbm9kZS5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgfVxuICAgIHJldHVybiBub2RlO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gd3JpdGVFZGdlcyhnKSB7XG4gIHJldHVybiBfLm1hcChnLmVkZ2VzKCksIGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyIGVkZ2VWYWx1ZSA9IGcuZWRnZShlKTtcbiAgICB2YXIgZWRnZSA9IHsgdjogZS52LCB3OiBlLncgfTtcbiAgICBpZiAoIV8uaXNVbmRlZmluZWQoZS5uYW1lKSkge1xuICAgICAgZWRnZS5uYW1lID0gZS5uYW1lO1xuICAgIH1cbiAgICBpZiAoIV8uaXNVbmRlZmluZWQoZWRnZVZhbHVlKSkge1xuICAgICAgZWRnZS52YWx1ZSA9IGVkZ2VWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGVkZ2U7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiByZWFkKGpzb24pIHtcbiAgdmFyIGcgPSBuZXcgR3JhcGgoanNvbi5vcHRpb25zKS5zZXRHcmFwaChqc29uLnZhbHVlKTtcbiAgXy5lYWNoKGpzb24ubm9kZXMsIGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIGcuc2V0Tm9kZShlbnRyeS52LCBlbnRyeS52YWx1ZSk7XG4gICAgaWYgKGVudHJ5LnBhcmVudCkge1xuICAgICAgZy5zZXRQYXJlbnQoZW50cnkudiwgZW50cnkucGFyZW50KTtcbiAgICB9XG4gIH0pO1xuICBfLmVhY2goanNvbi5lZGdlcywgZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgZy5zZXRFZGdlKHsgdjogZW50cnkudiwgdzogZW50cnkudywgbmFtZTogZW50cnkubmFtZSB9LCBlbnRyeS52YWx1ZSk7XG4gIH0pO1xuICByZXR1cm4gZztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dagre-d3-es/src/graphlib/json.js\n");

/***/ }),

/***/ "./node_modules/lodash-es/clone.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baseClone_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/lodash-es/_baseClone.js\");\n\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return (0,_baseClone_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value, CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clone);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2Nsb25lLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xhcml0eS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvY2xvbmUuanM/YTc5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUNsb25lIGZyb20gJy4vX2Jhc2VDbG9uZS5qcyc7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIGNsb25pbmcuICovXG52YXIgQ0xPTkVfU1lNQk9MU19GTEFHID0gNDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc2hhbGxvdyBjbG9uZSBvZiBgdmFsdWVgLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uIHRoZVxuICogW3N0cnVjdHVyZWQgY2xvbmUgYWxnb3JpdGhtXShodHRwczovL21kbi5pby9TdHJ1Y3R1cmVkX2Nsb25lX2FsZ29yaXRobSlcbiAqIGFuZCBzdXBwb3J0cyBjbG9uaW5nIGFycmF5cywgYXJyYXkgYnVmZmVycywgYm9vbGVhbnMsIGRhdGUgb2JqZWN0cywgbWFwcyxcbiAqIG51bWJlcnMsIGBPYmplY3RgIG9iamVjdHMsIHJlZ2V4ZXMsIHNldHMsIHN0cmluZ3MsIHN5bWJvbHMsIGFuZCB0eXBlZFxuICogYXJyYXlzLiBUaGUgb3duIGVudW1lcmFibGUgcHJvcGVydGllcyBvZiBgYXJndW1lbnRzYCBvYmplY3RzIGFyZSBjbG9uZWRcbiAqIGFzIHBsYWluIG9iamVjdHMuIEFuIGVtcHR5IG9iamVjdCBpcyByZXR1cm5lZCBmb3IgdW5jbG9uZWFibGUgdmFsdWVzIHN1Y2hcbiAqIGFzIGVycm9yIG9iamVjdHMsIGZ1bmN0aW9ucywgRE9NIG5vZGVzLCBhbmQgV2Vha01hcHMuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNsb25lLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGNsb25lZCB2YWx1ZS5cbiAqIEBzZWUgXy5jbG9uZURlZXBcbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdHMgPSBbeyAnYSc6IDEgfSwgeyAnYic6IDIgfV07XG4gKlxuICogdmFyIHNoYWxsb3cgPSBfLmNsb25lKG9iamVjdHMpO1xuICogY29uc29sZS5sb2coc2hhbGxvd1swXSA9PT0gb2JqZWN0c1swXSk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGNsb25lKHZhbHVlKSB7XG4gIHJldHVybiBiYXNlQ2xvbmUodmFsdWUsIENMT05FX1NZTUJPTFNfRkxBRyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsb25lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash-es/clone.js\n");

/***/ }),

/***/ "./node_modules/mermaid/dist/index-2c4b9a3b.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   r: () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var dagre_d3_es_src_dagre_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/dagre-d3-es/src/dagre/index.js\");\n/* harmony import */ var dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/dagre-d3-es/src/graphlib/json.js\");\n/* harmony import */ var _edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./node_modules/mermaid/dist/edges-f2ad444c.js\");\n/* harmony import */ var _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/mermaid/dist/mermaid-8af3addd.js\");\n/* harmony import */ var dagre_d3_es_src_graphlib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/dagre-d3-es/src/graphlib/index.js\");\n/* harmony import */ var _createText_62fc7601_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/mermaid/dist/createText-62fc7601.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/d3/src/index.js\");\n\n\n\n\n\n\n\nlet clusterDb = {};\nlet descendants = {};\nlet parents = {};\nconst clear$1 = () => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n};\nconst isDescendant = (id, ancenstorId) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"In isDecendant\", ancenstorId, \" \", id, \" = \", descendants[ancenstorId].includes(id));\n  if (descendants[ancenstorId].includes(id)) {\n    return true;\n  }\n  return false;\n};\nconst edgeInCluster = (edge, clusterId) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Decendants of \", clusterId, \" is \", descendants[clusterId]);\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Tilt, \", clusterId, \",not in decendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n};\nconst copy = (clusterId, graph, newGraph, rootId) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.error(e);\n        }\n      });\n    }\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n};\nconst extractDescendants = (id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n};\nconst findNonClusterChild = (id, graph) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Searching\", id);\n  const children = graph.children(id);\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n};\nconst getAnchorId = (id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n};\nconst adjustClustersAndEdges = (graph, depth) => {\n  if (!graph || depth > 10) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph)\n      );\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Decendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb[e.v],\n      \" --- \",\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        edge.toCluster = e.w;\n      }\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Adjusted Graph\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph));\n  extractor(graph, 0);\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(clusterDb);\n};\nconst extractor = (graph, depth) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"extractor - \", depth, dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb[node]) {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections && // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node] && clusterDb[node].clusterData && clusterDb[node].clusterData.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new dagre_d3_es_src_graphlib_index_js__WEBPACK_IMPORTED_MODULE_2__.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Old graph before copy\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"New graph after copy node: (\", node, \")\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(clusterGraph));\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(\"Old graph after copy\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph));\n    } else {\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb[node].externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n};\nconst sorter = (graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n};\nconst sortNodesByHierarchy = (graph) => sorter(graph, graph.children());\nconst rect = (parent, node) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Creating subgraph rect for \", node.id, node);\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = (0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.m)((0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.c)().flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? (0,_createText_62fc7601_js__WEBPACK_IMPORTED_MODULE_5__.a)(label, node.labelText, { style: node.labelStyle, useHtmlLabels }) : label.node().appendChild((0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.c)(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if ((0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.m)((0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.c)().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_3__.select)(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  if (useHtmlLabels) {\n    label.attr(\n      \"transform\",\n      // This puts the labal on top of the box instead of inside it\n      \"translate(\" + (node.x - bbox.width / 2) + \", \" + (node.y - node.height / 2) + \")\"\n    );\n  } else {\n    label.attr(\n      \"transform\",\n      // This puts the labal on top of the box instead of inside it\n      \"translate(\" + node.x + \", \" + (node.y - node.height / 2) + \")\"\n    );\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.i)(node, point);\n  };\n  return shapeSvg;\n};\nconst noteGroup = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.i)(node, point);\n  };\n  return shapeSvg;\n};\nconst roundedWithTitle = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild((0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.c)(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if ((0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.m)((0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.c)().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_3__.select)(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  label.attr(\n    \"transform\",\n    \"translate(\" + (node.x - bbox.width / 2) + \", \" + (node.y - node.height / 2 - node.padding / 3 + ((0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.m)((0,_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.c)().flowchart.htmlLabels) ? 5 : 3)) + \")\"\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.i)(node, point);\n  };\n  return shapeSvg;\n};\nconst divider = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function(point) {\n    return (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.i)(node, point);\n  };\n  return shapeSvg;\n};\nconst shapes = { rect, roundedWithTitle, noteGroup, divider };\nlet clusterElems = {};\nconst insertCluster = (elem, node) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n};\nconst clear = () => {\n  clusterElems = {};\n};\nconst recursiveRender = async (_elem, graph, diagramtype, id, parentCluster) => {\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Graph in recursive render: XXX\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"No nodes found for\", graph);\n  } else {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node && node.clusterNode) {\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Cluster identified\", v, node.width, graph.node(v));\n        const o = await recursiveRender(nodes, node.graph, diagramtype, id, graph.node(v));\n        const newEl = o.elem;\n        (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.u)(node, newEl);\n        node.diff = o.diff || 0;\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n        (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.s)(newEl, node);\n        _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Recursive render complete \", newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n          _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(findNonClusterChild(node.id, graph));\n          clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        } else {\n          _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Node - the non recursive path\", v, node.id, node);\n          await (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.e)(nodes, graph.node(v), dir);\n        }\n      }\n    })\n  );\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translateing: \", clusterDb[e.v], clusterDb[e.w]);\n    (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.f)(edgeLabels, edge);\n  });\n  graph.edges().forEach(function(e) {\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"#############################################\");\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"###                Layout                 ###\");\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"#############################################\");\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(graph);\n  (0,dagre_d3_es_src_dagre_index_js__WEBPACK_IMPORTED_MODULE_0__.layout)(graph);\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Graph after layout:\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph));\n  let diff = 0;\n  sortNodesByHierarchy(graph).forEach(function(v) {\n    const node = graph.node(v);\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\n      \"Position \" + v + \": (\" + node.x,\n      \",\" + node.y,\n      \") width: \",\n      node.width,\n      \" height: \",\n      node.height\n    );\n    if (node && node.clusterNode) {\n      (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.p)(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.p)(node);\n      }\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    const paths = (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.g)(edgePaths, e, edge, clusterDb, diagramtype, graph, id);\n    (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.h)(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n};\nconst render = async (elem, graph, markers, diagramtype, id) => {\n  (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.a)(elem, markers, diagramtype, id);\n  (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.b)();\n  (0,_edges_f2ad444c_js__WEBPACK_IMPORTED_MODULE_6__.d)();\n  clear();\n  clear$1();\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Graph at first:\", JSON.stringify(dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph)));\n  adjustClustersAndEdges(graph);\n  _mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_4__.l.warn(\"Graph after:\", JSON.stringify(dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_1__.write(graph)));\n  await recursiveRender(elem, graph, diagramtype, id);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWVybWFpZC9kaXN0L2luZGV4LTJjNGI5YTNiLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFyaXR5Ly4vbm9kZV9tb2R1bGVzL21lcm1haWQvZGlzdC9pbmRleC0yYzRiOWEzYi5qcz82OGU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxheW91dCB9IGZyb20gXCJkYWdyZS1kMy1lcy9zcmMvZGFncmUvaW5kZXguanNcIjtcbmltcG9ydCAqIGFzIGdyYXBobGliSnNvbiBmcm9tIFwiZGFncmUtZDMtZXMvc3JjL2dyYXBobGliL2pzb24uanNcIjtcbmltcG9ydCB7IGMgYXMgY3JlYXRlTGFiZWwsIGkgYXMgaW50ZXJzZWN0UmVjdCwgYSBhcyBpbnNlcnRNYXJrZXJzLCBiIGFzIGNsZWFyJDIsIGQgYXMgY2xlYXIkMywgdSBhcyB1cGRhdGVOb2RlQm91bmRzLCBzIGFzIHNldE5vZGVFbGVtLCBlIGFzIGluc2VydE5vZGUsIGYgYXMgaW5zZXJ0RWRnZUxhYmVsLCBwIGFzIHBvc2l0aW9uTm9kZSwgZyBhcyBpbnNlcnRFZGdlLCBoIGFzIHBvc2l0aW9uRWRnZUxhYmVsIH0gZnJvbSBcIi4vZWRnZXMtZjJhZDQ0NGMuanNcIjtcbmltcG9ydCB7IGwgYXMgbG9nLCBtIGFzIGV2YWx1YXRlLCBjIGFzIGdldENvbmZpZyB9IGZyb20gXCIuL21lcm1haWQtOGFmM2FkZGQuanNcIjtcbmltcG9ydCAqIGFzIGdyYXBobGliIGZyb20gXCJkYWdyZS1kMy1lcy9zcmMvZ3JhcGhsaWIvaW5kZXguanNcIjtcbmltcG9ydCB7IGEgYXMgY3JlYXRlVGV4dCB9IGZyb20gXCIuL2NyZWF0ZVRleHQtNjJmYzc2MDEuanNcIjtcbmltcG9ydCB7IHNlbGVjdCB9IGZyb20gXCJkM1wiO1xubGV0IGNsdXN0ZXJEYiA9IHt9O1xubGV0IGRlc2NlbmRhbnRzID0ge307XG5sZXQgcGFyZW50cyA9IHt9O1xuY29uc3QgY2xlYXIkMSA9ICgpID0+IHtcbiAgZGVzY2VuZGFudHMgPSB7fTtcbiAgcGFyZW50cyA9IHt9O1xuICBjbHVzdGVyRGIgPSB7fTtcbn07XG5jb25zdCBpc0Rlc2NlbmRhbnQgPSAoaWQsIGFuY2Vuc3RvcklkKSA9PiB7XG4gIGxvZy50cmFjZShcIkluIGlzRGVjZW5kYW50XCIsIGFuY2Vuc3RvcklkLCBcIiBcIiwgaWQsIFwiID0gXCIsIGRlc2NlbmRhbnRzW2FuY2Vuc3RvcklkXS5pbmNsdWRlcyhpZCkpO1xuICBpZiAoZGVzY2VuZGFudHNbYW5jZW5zdG9ySWRdLmluY2x1ZGVzKGlkKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5jb25zdCBlZGdlSW5DbHVzdGVyID0gKGVkZ2UsIGNsdXN0ZXJJZCkgPT4ge1xuICBsb2cuaW5mbyhcIkRlY2VuZGFudHMgb2YgXCIsIGNsdXN0ZXJJZCwgXCIgaXMgXCIsIGRlc2NlbmRhbnRzW2NsdXN0ZXJJZF0pO1xuICBsb2cuaW5mbyhcIkVkZ2UgaXMgXCIsIGVkZ2UpO1xuICBpZiAoZWRnZS52ID09PSBjbHVzdGVySWQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKGVkZ2UudyA9PT0gY2x1c3RlcklkKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICghZGVzY2VuZGFudHNbY2x1c3RlcklkXSkge1xuICAgIGxvZy5kZWJ1ZyhcIlRpbHQsIFwiLCBjbHVzdGVySWQsIFwiLG5vdCBpbiBkZWNlbmRhbnRzXCIpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gZGVzY2VuZGFudHNbY2x1c3RlcklkXS5pbmNsdWRlcyhlZGdlLnYpIHx8IGlzRGVzY2VuZGFudChlZGdlLnYsIGNsdXN0ZXJJZCkgfHwgaXNEZXNjZW5kYW50KGVkZ2UudywgY2x1c3RlcklkKSB8fCBkZXNjZW5kYW50c1tjbHVzdGVySWRdLmluY2x1ZGVzKGVkZ2Uudyk7XG59O1xuY29uc3QgY29weSA9IChjbHVzdGVySWQsIGdyYXBoLCBuZXdHcmFwaCwgcm9vdElkKSA9PiB7XG4gIGxvZy53YXJuKFxuICAgIFwiQ29weWluZyBjaGlsZHJlbiBvZiBcIixcbiAgICBjbHVzdGVySWQsXG4gICAgXCJyb290XCIsXG4gICAgcm9vdElkLFxuICAgIFwiZGF0YVwiLFxuICAgIGdyYXBoLm5vZGUoY2x1c3RlcklkKSxcbiAgICByb290SWRcbiAgKTtcbiAgY29uc3Qgbm9kZXMgPSBncmFwaC5jaGlsZHJlbihjbHVzdGVySWQpIHx8IFtdO1xuICBpZiAoY2x1c3RlcklkICE9PSByb290SWQpIHtcbiAgICBub2Rlcy5wdXNoKGNsdXN0ZXJJZCk7XG4gIH1cbiAgbG9nLndhcm4oXCJDb3B5aW5nIChub2RlcykgY2x1c3RlcklkXCIsIGNsdXN0ZXJJZCwgXCJub2Rlc1wiLCBub2Rlcyk7XG4gIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICBpZiAoZ3JhcGguY2hpbGRyZW4obm9kZSkubGVuZ3RoID4gMCkge1xuICAgICAgY29weShub2RlLCBncmFwaCwgbmV3R3JhcGgsIHJvb3RJZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBncmFwaC5ub2RlKG5vZGUpO1xuICAgICAgbG9nLmluZm8oXCJjcCBcIiwgbm9kZSwgXCIgdG8gXCIsIHJvb3RJZCwgXCIgd2l0aCBwYXJlbnQgXCIsIGNsdXN0ZXJJZCk7XG4gICAgICBuZXdHcmFwaC5zZXROb2RlKG5vZGUsIGRhdGEpO1xuICAgICAgaWYgKHJvb3RJZCAhPT0gZ3JhcGgucGFyZW50KG5vZGUpKSB7XG4gICAgICAgIGxvZy53YXJuKFwiU2V0dGluZyBwYXJlbnRcIiwgbm9kZSwgZ3JhcGgucGFyZW50KG5vZGUpKTtcbiAgICAgICAgbmV3R3JhcGguc2V0UGFyZW50KG5vZGUsIGdyYXBoLnBhcmVudChub2RlKSk7XG4gICAgICB9XG4gICAgICBpZiAoY2x1c3RlcklkICE9PSByb290SWQgJiYgbm9kZSAhPT0gY2x1c3RlcklkKSB7XG4gICAgICAgIGxvZy5kZWJ1ZyhcIlNldHRpbmcgcGFyZW50XCIsIG5vZGUsIGNsdXN0ZXJJZCk7XG4gICAgICAgIG5ld0dyYXBoLnNldFBhcmVudChub2RlLCBjbHVzdGVySWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9nLmluZm8oXCJJbiBjb3B5IFwiLCBjbHVzdGVySWQsIFwicm9vdFwiLCByb290SWQsIFwiZGF0YVwiLCBncmFwaC5ub2RlKGNsdXN0ZXJJZCksIHJvb3RJZCk7XG4gICAgICAgIGxvZy5kZWJ1ZyhcbiAgICAgICAgICBcIk5vdCBTZXR0aW5nIHBhcmVudCBmb3Igbm9kZT1cIixcbiAgICAgICAgICBub2RlLFxuICAgICAgICAgIFwiY2x1c3RlciE9PXJvb3RJZFwiLFxuICAgICAgICAgIGNsdXN0ZXJJZCAhPT0gcm9vdElkLFxuICAgICAgICAgIFwibm9kZSE9PWNsdXN0ZXJJZFwiLFxuICAgICAgICAgIG5vZGUgIT09IGNsdXN0ZXJJZFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgY29uc3QgZWRnZXMgPSBncmFwaC5lZGdlcyhub2RlKTtcbiAgICAgIGxvZy5kZWJ1ZyhcIkNvcHlpbmcgRWRnZXNcIiwgZWRnZXMpO1xuICAgICAgZWRnZXMuZm9yRWFjaCgoZWRnZSkgPT4ge1xuICAgICAgICBsb2cuaW5mbyhcIkVkZ2VcIiwgZWRnZSk7XG4gICAgICAgIGNvbnN0IGRhdGEyID0gZ3JhcGguZWRnZShlZGdlLnYsIGVkZ2UudywgZWRnZS5uYW1lKTtcbiAgICAgICAgbG9nLmluZm8oXCJFZGdlIGRhdGFcIiwgZGF0YTIsIHJvb3RJZCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKGVkZ2VJbkNsdXN0ZXIoZWRnZSwgcm9vdElkKSkge1xuICAgICAgICAgICAgbG9nLmluZm8oXCJDb3B5aW5nIGFzIFwiLCBlZGdlLnYsIGVkZ2UudywgZGF0YTIsIGVkZ2UubmFtZSk7XG4gICAgICAgICAgICBuZXdHcmFwaC5zZXRFZGdlKGVkZ2UudiwgZWRnZS53LCBkYXRhMiwgZWRnZS5uYW1lKTtcbiAgICAgICAgICAgIGxvZy5pbmZvKFwibmV3R3JhcGggZWRnZXMgXCIsIG5ld0dyYXBoLmVkZ2VzKCksIG5ld0dyYXBoLmVkZ2UobmV3R3JhcGguZWRnZXMoKVswXSkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsb2cuaW5mbyhcbiAgICAgICAgICAgICAgXCJTa2lwcGluZyBjb3B5IG9mIGVkZ2UgXCIsXG4gICAgICAgICAgICAgIGVkZ2UudixcbiAgICAgICAgICAgICAgXCItLT5cIixcbiAgICAgICAgICAgICAgZWRnZS53LFxuICAgICAgICAgICAgICBcIiByb290SWQ6IFwiLFxuICAgICAgICAgICAgICByb290SWQsXG4gICAgICAgICAgICAgIFwiIGNsdXN0ZXJJZDpcIixcbiAgICAgICAgICAgICAgY2x1c3RlcklkXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGxvZy5lcnJvcihlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIGxvZy5kZWJ1ZyhcIlJlbW92aW5nIG5vZGVcIiwgbm9kZSk7XG4gICAgZ3JhcGgucmVtb3ZlTm9kZShub2RlKTtcbiAgfSk7XG59O1xuY29uc3QgZXh0cmFjdERlc2NlbmRhbnRzID0gKGlkLCBncmFwaCkgPT4ge1xuICBjb25zdCBjaGlsZHJlbiA9IGdyYXBoLmNoaWxkcmVuKGlkKTtcbiAgbGV0IHJlcyA9IFsuLi5jaGlsZHJlbl07XG4gIGZvciAoY29uc3QgY2hpbGQgb2YgY2hpbGRyZW4pIHtcbiAgICBwYXJlbnRzW2NoaWxkXSA9IGlkO1xuICAgIHJlcyA9IFsuLi5yZXMsIC4uLmV4dHJhY3REZXNjZW5kYW50cyhjaGlsZCwgZ3JhcGgpXTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcbmNvbnN0IGZpbmROb25DbHVzdGVyQ2hpbGQgPSAoaWQsIGdyYXBoKSA9PiB7XG4gIGxvZy50cmFjZShcIlNlYXJjaGluZ1wiLCBpZCk7XG4gIGNvbnN0IGNoaWxkcmVuID0gZ3JhcGguY2hpbGRyZW4oaWQpO1xuICBsb2cudHJhY2UoXCJTZWFyY2hpbmcgY2hpbGRyZW4gb2YgaWQgXCIsIGlkLCBjaGlsZHJlbik7XG4gIGlmIChjaGlsZHJlbi5sZW5ndGggPCAxKSB7XG4gICAgbG9nLnRyYWNlKFwiVGhpcyBpcyBhIHZhbGlkIG5vZGVcIiwgaWQpO1xuICAgIHJldHVybiBpZDtcbiAgfVxuICBmb3IgKGNvbnN0IGNoaWxkIG9mIGNoaWxkcmVuKSB7XG4gICAgY29uc3QgX2lkID0gZmluZE5vbkNsdXN0ZXJDaGlsZChjaGlsZCwgZ3JhcGgpO1xuICAgIGlmIChfaWQpIHtcbiAgICAgIGxvZy50cmFjZShcIkZvdW5kIHJlcGxhY2VtZW50IGZvclwiLCBpZCwgXCIgPT4gXCIsIF9pZCk7XG4gICAgICByZXR1cm4gX2lkO1xuICAgIH1cbiAgfVxufTtcbmNvbnN0IGdldEFuY2hvcklkID0gKGlkKSA9PiB7XG4gIGlmICghY2x1c3RlckRiW2lkXSkge1xuICAgIHJldHVybiBpZDtcbiAgfVxuICBpZiAoIWNsdXN0ZXJEYltpZF0uZXh0ZXJuYWxDb25uZWN0aW9ucykge1xuICAgIHJldHVybiBpZDtcbiAgfVxuICBpZiAoY2x1c3RlckRiW2lkXSkge1xuICAgIHJldHVybiBjbHVzdGVyRGJbaWRdLmlkO1xuICB9XG4gIHJldHVybiBpZDtcbn07XG5jb25zdCBhZGp1c3RDbHVzdGVyc0FuZEVkZ2VzID0gKGdyYXBoLCBkZXB0aCkgPT4ge1xuICBpZiAoIWdyYXBoIHx8IGRlcHRoID4gMTApIHtcbiAgICBsb2cuZGVidWcoXCJPcHRpbmcgb3V0LCBubyBncmFwaCBcIik7XG4gICAgcmV0dXJuO1xuICB9IGVsc2Uge1xuICAgIGxvZy5kZWJ1ZyhcIk9wdGluZyBpbiwgZ3JhcGggXCIpO1xuICB9XG4gIGdyYXBoLm5vZGVzKCkuZm9yRWFjaChmdW5jdGlvbihpZCkge1xuICAgIGNvbnN0IGNoaWxkcmVuID0gZ3JhcGguY2hpbGRyZW4oaWQpO1xuICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICBsb2cud2FybihcbiAgICAgICAgXCJDbHVzdGVyIGlkZW50aWZpZWRcIixcbiAgICAgICAgaWQsXG4gICAgICAgIFwiIFJlcGxhY2VtZW50IGlkIGluIGVkZ2VzOiBcIixcbiAgICAgICAgZmluZE5vbkNsdXN0ZXJDaGlsZChpZCwgZ3JhcGgpXG4gICAgICApO1xuICAgICAgZGVzY2VuZGFudHNbaWRdID0gZXh0cmFjdERlc2NlbmRhbnRzKGlkLCBncmFwaCk7XG4gICAgICBjbHVzdGVyRGJbaWRdID0geyBpZDogZmluZE5vbkNsdXN0ZXJDaGlsZChpZCwgZ3JhcGgpLCBjbHVzdGVyRGF0YTogZ3JhcGgubm9kZShpZCkgfTtcbiAgICB9XG4gIH0pO1xuICBncmFwaC5ub2RlcygpLmZvckVhY2goZnVuY3Rpb24oaWQpIHtcbiAgICBjb25zdCBjaGlsZHJlbiA9IGdyYXBoLmNoaWxkcmVuKGlkKTtcbiAgICBjb25zdCBlZGdlcyA9IGdyYXBoLmVkZ2VzKCk7XG4gICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgIGxvZy5kZWJ1ZyhcIkNsdXN0ZXIgaWRlbnRpZmllZFwiLCBpZCwgZGVzY2VuZGFudHMpO1xuICAgICAgZWRnZXMuZm9yRWFjaCgoZWRnZSkgPT4ge1xuICAgICAgICBpZiAoZWRnZS52ICE9PSBpZCAmJiBlZGdlLncgIT09IGlkKSB7XG4gICAgICAgICAgY29uc3QgZDEgPSBpc0Rlc2NlbmRhbnQoZWRnZS52LCBpZCk7XG4gICAgICAgICAgY29uc3QgZDIgPSBpc0Rlc2NlbmRhbnQoZWRnZS53LCBpZCk7XG4gICAgICAgICAgaWYgKGQxIF4gZDIpIHtcbiAgICAgICAgICAgIGxvZy53YXJuKFwiRWRnZTogXCIsIGVkZ2UsIFwiIGxlYXZlcyBjbHVzdGVyIFwiLCBpZCk7XG4gICAgICAgICAgICBsb2cud2FybihcIkRlY2VuZGFudHMgb2YgWFhYIFwiLCBpZCwgXCI6IFwiLCBkZXNjZW5kYW50c1tpZF0pO1xuICAgICAgICAgICAgY2x1c3RlckRiW2lkXS5leHRlcm5hbENvbm5lY3Rpb25zID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2cuZGVidWcoXCJOb3QgYSBjbHVzdGVyIFwiLCBpZCwgZGVzY2VuZGFudHMpO1xuICAgIH1cbiAgfSk7XG4gIGdyYXBoLmVkZ2VzKCkuZm9yRWFjaChmdW5jdGlvbihlKSB7XG4gICAgY29uc3QgZWRnZSA9IGdyYXBoLmVkZ2UoZSk7XG4gICAgbG9nLndhcm4oXCJFZGdlIFwiICsgZS52ICsgXCIgLT4gXCIgKyBlLncgKyBcIjogXCIgKyBKU09OLnN0cmluZ2lmeShlKSk7XG4gICAgbG9nLndhcm4oXCJFZGdlIFwiICsgZS52ICsgXCIgLT4gXCIgKyBlLncgKyBcIjogXCIgKyBKU09OLnN0cmluZ2lmeShncmFwaC5lZGdlKGUpKSk7XG4gICAgbGV0IHYgPSBlLnY7XG4gICAgbGV0IHcgPSBlLnc7XG4gICAgbG9nLndhcm4oXG4gICAgICBcIkZpeCBYWFhcIixcbiAgICAgIGNsdXN0ZXJEYixcbiAgICAgIFwiaWRzOlwiLFxuICAgICAgZS52LFxuICAgICAgZS53LFxuICAgICAgXCJUcmFuc2xhdGluZzogXCIsXG4gICAgICBjbHVzdGVyRGJbZS52XSxcbiAgICAgIFwiIC0tLSBcIixcbiAgICAgIGNsdXN0ZXJEYltlLnddXG4gICAgKTtcbiAgICBpZiAoY2x1c3RlckRiW2Uudl0gJiYgY2x1c3RlckRiW2Uud10gJiYgY2x1c3RlckRiW2Uudl0gPT09IGNsdXN0ZXJEYltlLnddKSB7XG4gICAgICBsb2cud2FybihcIkZpeGluZyBhbmQgdHJpeGluZyBsaW5rIHRvIHNlbGYgLSByZW1vdmluZyBYWFhcIiwgZS52LCBlLncsIGUubmFtZSk7XG4gICAgICBsb2cud2FybihcIkZpeGluZyBhbmQgdHJpeGluZyAtIHJlbW92aW5nIFhYWFwiLCBlLnYsIGUudywgZS5uYW1lKTtcbiAgICAgIHYgPSBnZXRBbmNob3JJZChlLnYpO1xuICAgICAgdyA9IGdldEFuY2hvcklkKGUudyk7XG4gICAgICBncmFwaC5yZW1vdmVFZGdlKGUudiwgZS53LCBlLm5hbWUpO1xuICAgICAgY29uc3Qgc3BlY2lhbElkID0gZS53ICsgXCItLS1cIiArIGUudjtcbiAgICAgIGdyYXBoLnNldE5vZGUoc3BlY2lhbElkLCB7XG4gICAgICAgIGRvbUlkOiBzcGVjaWFsSWQsXG4gICAgICAgIGlkOiBzcGVjaWFsSWQsXG4gICAgICAgIGxhYmVsU3R5bGU6IFwiXCIsXG4gICAgICAgIGxhYmVsVGV4dDogZWRnZS5sYWJlbCxcbiAgICAgICAgcGFkZGluZzogMCxcbiAgICAgICAgc2hhcGU6IFwibGFiZWxSZWN0XCIsXG4gICAgICAgIHN0eWxlOiBcIlwiXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IGVkZ2UxID0gc3RydWN0dXJlZENsb25lKGVkZ2UpO1xuICAgICAgY29uc3QgZWRnZTIgPSBzdHJ1Y3R1cmVkQ2xvbmUoZWRnZSk7XG4gICAgICBlZGdlMS5sYWJlbCA9IFwiXCI7XG4gICAgICBlZGdlMS5hcnJvd1R5cGVFbmQgPSBcIm5vbmVcIjtcbiAgICAgIGVkZ2UyLmxhYmVsID0gXCJcIjtcbiAgICAgIGVkZ2UxLmZyb21DbHVzdGVyID0gZS52O1xuICAgICAgZWRnZTIudG9DbHVzdGVyID0gZS52O1xuICAgICAgZ3JhcGguc2V0RWRnZSh2LCBzcGVjaWFsSWQsIGVkZ2UxLCBlLm5hbWUgKyBcIi1jeWNsaWMtc3BlY2lhbFwiKTtcbiAgICAgIGdyYXBoLnNldEVkZ2Uoc3BlY2lhbElkLCB3LCBlZGdlMiwgZS5uYW1lICsgXCItY3ljbGljLXNwZWNpYWxcIik7XG4gICAgfSBlbHNlIGlmIChjbHVzdGVyRGJbZS52XSB8fCBjbHVzdGVyRGJbZS53XSkge1xuICAgICAgbG9nLndhcm4oXCJGaXhpbmcgYW5kIHRyaXhpbmcgLSByZW1vdmluZyBYWFhcIiwgZS52LCBlLncsIGUubmFtZSk7XG4gICAgICB2ID0gZ2V0QW5jaG9ySWQoZS52KTtcbiAgICAgIHcgPSBnZXRBbmNob3JJZChlLncpO1xuICAgICAgZ3JhcGgucmVtb3ZlRWRnZShlLnYsIGUudywgZS5uYW1lKTtcbiAgICAgIGlmICh2ICE9PSBlLnYpIHtcbiAgICAgICAgZWRnZS5mcm9tQ2x1c3RlciA9IGUudjtcbiAgICAgIH1cbiAgICAgIGlmICh3ICE9PSBlLncpIHtcbiAgICAgICAgZWRnZS50b0NsdXN0ZXIgPSBlLnc7XG4gICAgICB9XG4gICAgICBsb2cud2FybihcIkZpeCBSZXBsYWNpbmcgd2l0aCBYWFhcIiwgdiwgdywgZS5uYW1lKTtcbiAgICAgIGdyYXBoLnNldEVkZ2UodiwgdywgZWRnZSwgZS5uYW1lKTtcbiAgICB9XG4gIH0pO1xuICBsb2cud2FybihcIkFkanVzdGVkIEdyYXBoXCIsIGdyYXBobGliSnNvbi53cml0ZShncmFwaCkpO1xuICBleHRyYWN0b3IoZ3JhcGgsIDApO1xuICBsb2cudHJhY2UoY2x1c3RlckRiKTtcbn07XG5jb25zdCBleHRyYWN0b3IgPSAoZ3JhcGgsIGRlcHRoKSA9PiB7XG4gIGxvZy53YXJuKFwiZXh0cmFjdG9yIC0gXCIsIGRlcHRoLCBncmFwaGxpYkpzb24ud3JpdGUoZ3JhcGgpLCBncmFwaC5jaGlsZHJlbihcIkRcIikpO1xuICBpZiAoZGVwdGggPiAxMCkge1xuICAgIGxvZy5lcnJvcihcIkJhaWxpbmcgb3V0XCIpO1xuICAgIHJldHVybjtcbiAgfVxuICBsZXQgbm9kZXMgPSBncmFwaC5ub2RlcygpO1xuICBsZXQgaGFzQ2hpbGRyZW4gPSBmYWxzZTtcbiAgZm9yIChjb25zdCBub2RlIG9mIG5vZGVzKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBncmFwaC5jaGlsZHJlbihub2RlKTtcbiAgICBoYXNDaGlsZHJlbiA9IGhhc0NoaWxkcmVuIHx8IGNoaWxkcmVuLmxlbmd0aCA+IDA7XG4gIH1cbiAgaWYgKCFoYXNDaGlsZHJlbikge1xuICAgIGxvZy5kZWJ1ZyhcIkRvbmUsIG5vIG5vZGUgaGFzIGNoaWxkcmVuXCIsIGdyYXBoLm5vZGVzKCkpO1xuICAgIHJldHVybjtcbiAgfVxuICBsb2cuZGVidWcoXCJOb2RlcyA9IFwiLCBub2RlcywgZGVwdGgpO1xuICBmb3IgKGNvbnN0IG5vZGUgb2Ygbm9kZXMpIHtcbiAgICBsb2cuZGVidWcoXG4gICAgICBcIkV4dHJhY3Rpbmcgbm9kZVwiLFxuICAgICAgbm9kZSxcbiAgICAgIGNsdXN0ZXJEYixcbiAgICAgIGNsdXN0ZXJEYltub2RlXSAmJiAhY2x1c3RlckRiW25vZGVdLmV4dGVybmFsQ29ubmVjdGlvbnMsXG4gICAgICAhZ3JhcGgucGFyZW50KG5vZGUpLFxuICAgICAgZ3JhcGgubm9kZShub2RlKSxcbiAgICAgIGdyYXBoLmNoaWxkcmVuKFwiRFwiKSxcbiAgICAgIFwiIERlcHRoIFwiLFxuICAgICAgZGVwdGhcbiAgICApO1xuICAgIGlmICghY2x1c3RlckRiW25vZGVdKSB7XG4gICAgICBsb2cuZGVidWcoXCJOb3QgYSBjbHVzdGVyXCIsIG5vZGUsIGRlcHRoKTtcbiAgICB9IGVsc2UgaWYgKCFjbHVzdGVyRGJbbm9kZV0uZXh0ZXJuYWxDb25uZWN0aW9ucyAmJiAvLyAhZ3JhcGgucGFyZW50KG5vZGUpICYmXG4gICAgZ3JhcGguY2hpbGRyZW4obm9kZSkgJiYgZ3JhcGguY2hpbGRyZW4obm9kZSkubGVuZ3RoID4gMCkge1xuICAgICAgbG9nLndhcm4oXG4gICAgICAgIFwiQ2x1c3RlciB3aXRob3V0IGV4dGVybmFsIGNvbm5lY3Rpb25zLCB3aXRob3V0IGEgcGFyZW50IGFuZCB3aXRoIGNoaWxkcmVuXCIsXG4gICAgICAgIG5vZGUsXG4gICAgICAgIGRlcHRoXG4gICAgICApO1xuICAgICAgY29uc3QgZ3JhcGhTZXR0aW5ncyA9IGdyYXBoLmdyYXBoKCk7XG4gICAgICBsZXQgZGlyID0gZ3JhcGhTZXR0aW5ncy5yYW5rZGlyID09PSBcIlRCXCIgPyBcIkxSXCIgOiBcIlRCXCI7XG4gICAgICBpZiAoY2x1c3RlckRiW25vZGVdICYmIGNsdXN0ZXJEYltub2RlXS5jbHVzdGVyRGF0YSAmJiBjbHVzdGVyRGJbbm9kZV0uY2x1c3RlckRhdGEuZGlyKSB7XG4gICAgICAgIGRpciA9IGNsdXN0ZXJEYltub2RlXS5jbHVzdGVyRGF0YS5kaXI7XG4gICAgICAgIGxvZy53YXJuKFwiRml4aW5nIGRpclwiLCBjbHVzdGVyRGJbbm9kZV0uY2x1c3RlckRhdGEuZGlyLCBkaXIpO1xuICAgICAgfVxuICAgICAgY29uc3QgY2x1c3RlckdyYXBoID0gbmV3IGdyYXBobGliLkdyYXBoKHtcbiAgICAgICAgbXVsdGlncmFwaDogdHJ1ZSxcbiAgICAgICAgY29tcG91bmQ6IHRydWVcbiAgICAgIH0pLnNldEdyYXBoKHtcbiAgICAgICAgcmFua2RpcjogZGlyLFxuICAgICAgICAvLyBUb2RvOiBzZXQgcHJvcGVyIHNwYWNpbmdcbiAgICAgICAgbm9kZXNlcDogNTAsXG4gICAgICAgIHJhbmtzZXA6IDUwLFxuICAgICAgICBtYXJnaW54OiA4LFxuICAgICAgICBtYXJnaW55OiA4XG4gICAgICB9KS5zZXREZWZhdWx0RWRnZUxhYmVsKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgICB9KTtcbiAgICAgIGxvZy53YXJuKFwiT2xkIGdyYXBoIGJlZm9yZSBjb3B5XCIsIGdyYXBobGliSnNvbi53cml0ZShncmFwaCkpO1xuICAgICAgY29weShub2RlLCBncmFwaCwgY2x1c3RlckdyYXBoLCBub2RlKTtcbiAgICAgIGdyYXBoLnNldE5vZGUobm9kZSwge1xuICAgICAgICBjbHVzdGVyTm9kZTogdHJ1ZSxcbiAgICAgICAgaWQ6IG5vZGUsXG4gICAgICAgIGNsdXN0ZXJEYXRhOiBjbHVzdGVyRGJbbm9kZV0uY2x1c3RlckRhdGEsXG4gICAgICAgIGxhYmVsVGV4dDogY2x1c3RlckRiW25vZGVdLmxhYmVsVGV4dCxcbiAgICAgICAgZ3JhcGg6IGNsdXN0ZXJHcmFwaFxuICAgICAgfSk7XG4gICAgICBsb2cud2FybihcIk5ldyBncmFwaCBhZnRlciBjb3B5IG5vZGU6IChcIiwgbm9kZSwgXCIpXCIsIGdyYXBobGliSnNvbi53cml0ZShjbHVzdGVyR3JhcGgpKTtcbiAgICAgIGxvZy5kZWJ1ZyhcIk9sZCBncmFwaCBhZnRlciBjb3B5XCIsIGdyYXBobGliSnNvbi53cml0ZShncmFwaCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2cud2FybihcbiAgICAgICAgXCJDbHVzdGVyICoqIFwiLFxuICAgICAgICBub2RlLFxuICAgICAgICBcIiAqKm5vdCBtZWV0aW5nIHRoZSBjcml0ZXJpYSAhZXh0ZXJuYWxDb25uZWN0aW9uczpcIixcbiAgICAgICAgIWNsdXN0ZXJEYltub2RlXS5leHRlcm5hbENvbm5lY3Rpb25zLFxuICAgICAgICBcIiBubyBwYXJlbnQ6IFwiLFxuICAgICAgICAhZ3JhcGgucGFyZW50KG5vZGUpLFxuICAgICAgICBcIiBjaGlsZHJlbiBcIixcbiAgICAgICAgZ3JhcGguY2hpbGRyZW4obm9kZSkgJiYgZ3JhcGguY2hpbGRyZW4obm9kZSkubGVuZ3RoID4gMCxcbiAgICAgICAgZ3JhcGguY2hpbGRyZW4oXCJEXCIpLFxuICAgICAgICBkZXB0aFxuICAgICAgKTtcbiAgICAgIGxvZy5kZWJ1ZyhjbHVzdGVyRGIpO1xuICAgIH1cbiAgfVxuICBub2RlcyA9IGdyYXBoLm5vZGVzKCk7XG4gIGxvZy53YXJuKFwiTmV3IGxpc3Qgb2Ygbm9kZXNcIiwgbm9kZXMpO1xuICBmb3IgKGNvbnN0IG5vZGUgb2Ygbm9kZXMpIHtcbiAgICBjb25zdCBkYXRhID0gZ3JhcGgubm9kZShub2RlKTtcbiAgICBsb2cud2FybihcIiBOb3cgbmV4dCBsZXZlbFwiLCBub2RlLCBkYXRhKTtcbiAgICBpZiAoZGF0YS5jbHVzdGVyTm9kZSkge1xuICAgICAgZXh0cmFjdG9yKGRhdGEuZ3JhcGgsIGRlcHRoICsgMSk7XG4gICAgfVxuICB9XG59O1xuY29uc3Qgc29ydGVyID0gKGdyYXBoLCBub2RlcykgPT4ge1xuICBpZiAobm9kZXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGxldCByZXN1bHQgPSBPYmplY3QuYXNzaWduKG5vZGVzKTtcbiAgbm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xuICAgIGNvbnN0IGNoaWxkcmVuID0gZ3JhcGguY2hpbGRyZW4obm9kZSk7XG4gICAgY29uc3Qgc29ydGVkID0gc29ydGVyKGdyYXBoLCBjaGlsZHJlbik7XG4gICAgcmVzdWx0ID0gWy4uLnJlc3VsdCwgLi4uc29ydGVkXTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuY29uc3Qgc29ydE5vZGVzQnlIaWVyYXJjaHkgPSAoZ3JhcGgpID0+IHNvcnRlcihncmFwaCwgZ3JhcGguY2hpbGRyZW4oKSk7XG5jb25zdCByZWN0ID0gKHBhcmVudCwgbm9kZSkgPT4ge1xuICBsb2cuaW5mbyhcIkNyZWF0aW5nIHN1YmdyYXBoIHJlY3QgZm9yIFwiLCBub2RlLmlkLCBub2RlKTtcbiAgY29uc3Qgc2hhcGVTdmcgPSBwYXJlbnQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJjbHVzdGVyXCIgKyAobm9kZS5jbGFzcyA/IFwiIFwiICsgbm9kZS5jbGFzcyA6IFwiXCIpKS5hdHRyKFwiaWRcIiwgbm9kZS5pZCk7XG4gIGNvbnN0IHJlY3QyID0gc2hhcGVTdmcuaW5zZXJ0KFwicmVjdFwiLCBcIjpmaXJzdC1jaGlsZFwiKTtcbiAgY29uc3QgdXNlSHRtbExhYmVscyA9IGV2YWx1YXRlKGdldENvbmZpZygpLmZsb3djaGFydC5odG1sTGFiZWxzKTtcbiAgY29uc3QgbGFiZWwgPSBzaGFwZVN2Zy5pbnNlcnQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBcImNsdXN0ZXItbGFiZWxcIik7XG4gIGNvbnN0IHRleHQgPSBub2RlLmxhYmVsVHlwZSA9PT0gXCJtYXJrZG93blwiID8gY3JlYXRlVGV4dChsYWJlbCwgbm9kZS5sYWJlbFRleHQsIHsgc3R5bGU6IG5vZGUubGFiZWxTdHlsZSwgdXNlSHRtbExhYmVscyB9KSA6IGxhYmVsLm5vZGUoKS5hcHBlbmRDaGlsZChjcmVhdGVMYWJlbChub2RlLmxhYmVsVGV4dCwgbm9kZS5sYWJlbFN0eWxlLCB2b2lkIDAsIHRydWUpKTtcbiAgbGV0IGJib3ggPSB0ZXh0LmdldEJCb3goKTtcbiAgaWYgKGV2YWx1YXRlKGdldENvbmZpZygpLmZsb3djaGFydC5odG1sTGFiZWxzKSkge1xuICAgIGNvbnN0IGRpdiA9IHRleHQuY2hpbGRyZW5bMF07XG4gICAgY29uc3QgZHYgPSBzZWxlY3QodGV4dCk7XG4gICAgYmJveCA9IGRpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBkdi5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCk7XG4gICAgZHYuYXR0cihcImhlaWdodFwiLCBiYm94LmhlaWdodCk7XG4gIH1cbiAgY29uc3QgcGFkZGluZyA9IDAgKiBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IGhhbGZQYWRkaW5nID0gcGFkZGluZyAvIDI7XG4gIGNvbnN0IHdpZHRoID0gbm9kZS53aWR0aCA8PSBiYm94LndpZHRoICsgcGFkZGluZyA/IGJib3gud2lkdGggKyBwYWRkaW5nIDogbm9kZS53aWR0aDtcbiAgaWYgKG5vZGUud2lkdGggPD0gYmJveC53aWR0aCArIHBhZGRpbmcpIHtcbiAgICBub2RlLmRpZmYgPSAoYmJveC53aWR0aCAtIG5vZGUud2lkdGgpIC8gMiAtIG5vZGUucGFkZGluZyAvIDI7XG4gIH0gZWxzZSB7XG4gICAgbm9kZS5kaWZmID0gLW5vZGUucGFkZGluZyAvIDI7XG4gIH1cbiAgbG9nLnRyYWNlKFwiRGF0YSBcIiwgbm9kZSwgSlNPTi5zdHJpbmdpZnkobm9kZSkpO1xuICByZWN0Mi5hdHRyKFwic3R5bGVcIiwgbm9kZS5zdHlsZSkuYXR0cihcInJ4XCIsIG5vZGUucngpLmF0dHIoXCJyeVwiLCBub2RlLnJ5KS5hdHRyKFwieFwiLCBub2RlLnggLSB3aWR0aCAvIDIpLmF0dHIoXCJ5XCIsIG5vZGUueSAtIG5vZGUuaGVpZ2h0IC8gMiAtIGhhbGZQYWRkaW5nKS5hdHRyKFwid2lkdGhcIiwgd2lkdGgpLmF0dHIoXCJoZWlnaHRcIiwgbm9kZS5oZWlnaHQgKyBwYWRkaW5nKTtcbiAgaWYgKHVzZUh0bWxMYWJlbHMpIHtcbiAgICBsYWJlbC5hdHRyKFxuICAgICAgXCJ0cmFuc2Zvcm1cIixcbiAgICAgIC8vIFRoaXMgcHV0cyB0aGUgbGFiYWwgb24gdG9wIG9mIHRoZSBib3ggaW5zdGVhZCBvZiBpbnNpZGUgaXRcbiAgICAgIFwidHJhbnNsYXRlKFwiICsgKG5vZGUueCAtIGJib3gud2lkdGggLyAyKSArIFwiLCBcIiArIChub2RlLnkgLSBub2RlLmhlaWdodCAvIDIpICsgXCIpXCJcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGxhYmVsLmF0dHIoXG4gICAgICBcInRyYW5zZm9ybVwiLFxuICAgICAgLy8gVGhpcyBwdXRzIHRoZSBsYWJhbCBvbiB0b3Agb2YgdGhlIGJveCBpbnN0ZWFkIG9mIGluc2lkZSBpdFxuICAgICAgXCJ0cmFuc2xhdGUoXCIgKyBub2RlLnggKyBcIiwgXCIgKyAobm9kZS55IC0gbm9kZS5oZWlnaHQgLyAyKSArIFwiKVwiXG4gICAgKTtcbiAgfVxuICBjb25zdCByZWN0Qm94ID0gcmVjdDIubm9kZSgpLmdldEJCb3goKTtcbiAgbm9kZS53aWR0aCA9IHJlY3RCb3gud2lkdGg7XG4gIG5vZGUuaGVpZ2h0ID0gcmVjdEJveC5oZWlnaHQ7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQpIHtcbiAgICByZXR1cm4gaW50ZXJzZWN0UmVjdChub2RlLCBwb2ludCk7XG4gIH07XG4gIHJldHVybiBzaGFwZVN2Zztcbn07XG5jb25zdCBub3RlR3JvdXAgPSAocGFyZW50LCBub2RlKSA9PiB7XG4gIGNvbnN0IHNoYXBlU3ZnID0gcGFyZW50Lmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwibm90ZS1jbHVzdGVyXCIpLmF0dHIoXCJpZFwiLCBub2RlLmlkKTtcbiAgY29uc3QgcmVjdDIgPSBzaGFwZVN2Zy5pbnNlcnQoXCJyZWN0XCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjb25zdCBwYWRkaW5nID0gMCAqIG5vZGUucGFkZGluZztcbiAgY29uc3QgaGFsZlBhZGRpbmcgPSBwYWRkaW5nIC8gMjtcbiAgcmVjdDIuYXR0cihcInJ4XCIsIG5vZGUucngpLmF0dHIoXCJyeVwiLCBub2RlLnJ5KS5hdHRyKFwieFwiLCBub2RlLnggLSBub2RlLndpZHRoIC8gMiAtIGhhbGZQYWRkaW5nKS5hdHRyKFwieVwiLCBub2RlLnkgLSBub2RlLmhlaWdodCAvIDIgLSBoYWxmUGFkZGluZykuYXR0cihcIndpZHRoXCIsIG5vZGUud2lkdGggKyBwYWRkaW5nKS5hdHRyKFwiaGVpZ2h0XCIsIG5vZGUuaGVpZ2h0ICsgcGFkZGluZykuYXR0cihcImZpbGxcIiwgXCJub25lXCIpO1xuICBjb25zdCByZWN0Qm94ID0gcmVjdDIubm9kZSgpLmdldEJCb3goKTtcbiAgbm9kZS53aWR0aCA9IHJlY3RCb3gud2lkdGg7XG4gIG5vZGUuaGVpZ2h0ID0gcmVjdEJveC5oZWlnaHQ7XG4gIG5vZGUuaW50ZXJzZWN0ID0gZnVuY3Rpb24ocG9pbnQpIHtcbiAgICByZXR1cm4gaW50ZXJzZWN0UmVjdChub2RlLCBwb2ludCk7XG4gIH07XG4gIHJldHVybiBzaGFwZVN2Zztcbn07XG5jb25zdCByb3VuZGVkV2l0aFRpdGxlID0gKHBhcmVudCwgbm9kZSkgPT4ge1xuICBjb25zdCBzaGFwZVN2ZyA9IHBhcmVudC5pbnNlcnQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBub2RlLmNsYXNzZXMpLmF0dHIoXCJpZFwiLCBub2RlLmlkKTtcbiAgY29uc3QgcmVjdDIgPSBzaGFwZVN2Zy5pbnNlcnQoXCJyZWN0XCIsIFwiOmZpcnN0LWNoaWxkXCIpO1xuICBjb25zdCBsYWJlbCA9IHNoYXBlU3ZnLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwiY2x1c3Rlci1sYWJlbFwiKTtcbiAgY29uc3QgaW5uZXJSZWN0ID0gc2hhcGVTdmcuYXBwZW5kKFwicmVjdFwiKTtcbiAgY29uc3QgdGV4dCA9IGxhYmVsLm5vZGUoKS5hcHBlbmRDaGlsZChjcmVhdGVMYWJlbChub2RlLmxhYmVsVGV4dCwgbm9kZS5sYWJlbFN0eWxlLCB2b2lkIDAsIHRydWUpKTtcbiAgbGV0IGJib3ggPSB0ZXh0LmdldEJCb3goKTtcbiAgaWYgKGV2YWx1YXRlKGdldENvbmZpZygpLmZsb3djaGFydC5odG1sTGFiZWxzKSkge1xuICAgIGNvbnN0IGRpdiA9IHRleHQuY2hpbGRyZW5bMF07XG4gICAgY29uc3QgZHYgPSBzZWxlY3QodGV4dCk7XG4gICAgYmJveCA9IGRpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBkdi5hdHRyKFwid2lkdGhcIiwgYmJveC53aWR0aCk7XG4gICAgZHYuYXR0cihcImhlaWdodFwiLCBiYm94LmhlaWdodCk7XG4gIH1cbiAgYmJveCA9IHRleHQuZ2V0QkJveCgpO1xuICBjb25zdCBwYWRkaW5nID0gMCAqIG5vZGUucGFkZGluZztcbiAgY29uc3QgaGFsZlBhZGRpbmcgPSBwYWRkaW5nIC8gMjtcbiAgY29uc3Qgd2lkdGggPSBub2RlLndpZHRoIDw9IGJib3gud2lkdGggKyBub2RlLnBhZGRpbmcgPyBiYm94LndpZHRoICsgbm9kZS5wYWRkaW5nIDogbm9kZS53aWR0aDtcbiAgaWYgKG5vZGUud2lkdGggPD0gYmJveC53aWR0aCArIG5vZGUucGFkZGluZykge1xuICAgIG5vZGUuZGlmZiA9IChiYm94LndpZHRoICsgbm9kZS5wYWRkaW5nICogMCAtIG5vZGUud2lkdGgpIC8gMjtcbiAgfSBlbHNlIHtcbiAgICBub2RlLmRpZmYgPSAtbm9kZS5wYWRkaW5nIC8gMjtcbiAgfVxuICByZWN0Mi5hdHRyKFwiY2xhc3NcIiwgXCJvdXRlclwiKS5hdHRyKFwieFwiLCBub2RlLnggLSB3aWR0aCAvIDIgLSBoYWxmUGFkZGluZykuYXR0cihcInlcIiwgbm9kZS55IC0gbm9kZS5oZWlnaHQgLyAyIC0gaGFsZlBhZGRpbmcpLmF0dHIoXCJ3aWR0aFwiLCB3aWR0aCArIHBhZGRpbmcpLmF0dHIoXCJoZWlnaHRcIiwgbm9kZS5oZWlnaHQgKyBwYWRkaW5nKTtcbiAgaW5uZXJSZWN0LmF0dHIoXCJjbGFzc1wiLCBcImlubmVyXCIpLmF0dHIoXCJ4XCIsIG5vZGUueCAtIHdpZHRoIC8gMiAtIGhhbGZQYWRkaW5nKS5hdHRyKFwieVwiLCBub2RlLnkgLSBub2RlLmhlaWdodCAvIDIgLSBoYWxmUGFkZGluZyArIGJib3guaGVpZ2h0IC0gMSkuYXR0cihcIndpZHRoXCIsIHdpZHRoICsgcGFkZGluZykuYXR0cihcImhlaWdodFwiLCBub2RlLmhlaWdodCArIHBhZGRpbmcgLSBiYm94LmhlaWdodCAtIDMpO1xuICBsYWJlbC5hdHRyKFxuICAgIFwidHJhbnNmb3JtXCIsXG4gICAgXCJ0cmFuc2xhdGUoXCIgKyAobm9kZS54IC0gYmJveC53aWR0aCAvIDIpICsgXCIsIFwiICsgKG5vZGUueSAtIG5vZGUuaGVpZ2h0IC8gMiAtIG5vZGUucGFkZGluZyAvIDMgKyAoZXZhbHVhdGUoZ2V0Q29uZmlnKCkuZmxvd2NoYXJ0Lmh0bWxMYWJlbHMpID8gNSA6IDMpKSArIFwiKVwiXG4gICk7XG4gIGNvbnN0IHJlY3RCb3ggPSByZWN0Mi5ub2RlKCkuZ2V0QkJveCgpO1xuICBub2RlLmhlaWdodCA9IHJlY3RCb3guaGVpZ2h0O1xuICBub2RlLmludGVyc2VjdCA9IGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIGludGVyc2VjdFJlY3Qobm9kZSwgcG9pbnQpO1xuICB9O1xuICByZXR1cm4gc2hhcGVTdmc7XG59O1xuY29uc3QgZGl2aWRlciA9IChwYXJlbnQsIG5vZGUpID0+IHtcbiAgY29uc3Qgc2hhcGVTdmcgPSBwYXJlbnQuaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgbm9kZS5jbGFzc2VzKS5hdHRyKFwiaWRcIiwgbm9kZS5pZCk7XG4gIGNvbnN0IHJlY3QyID0gc2hhcGVTdmcuaW5zZXJ0KFwicmVjdFwiLCBcIjpmaXJzdC1jaGlsZFwiKTtcbiAgY29uc3QgcGFkZGluZyA9IDAgKiBub2RlLnBhZGRpbmc7XG4gIGNvbnN0IGhhbGZQYWRkaW5nID0gcGFkZGluZyAvIDI7XG4gIHJlY3QyLmF0dHIoXCJjbGFzc1wiLCBcImRpdmlkZXJcIikuYXR0cihcInhcIiwgbm9kZS54IC0gbm9kZS53aWR0aCAvIDIgLSBoYWxmUGFkZGluZykuYXR0cihcInlcIiwgbm9kZS55IC0gbm9kZS5oZWlnaHQgLyAyKS5hdHRyKFwid2lkdGhcIiwgbm9kZS53aWR0aCArIHBhZGRpbmcpLmF0dHIoXCJoZWlnaHRcIiwgbm9kZS5oZWlnaHQgKyBwYWRkaW5nKTtcbiAgY29uc3QgcmVjdEJveCA9IHJlY3QyLm5vZGUoKS5nZXRCQm94KCk7XG4gIG5vZGUud2lkdGggPSByZWN0Qm94LndpZHRoO1xuICBub2RlLmhlaWdodCA9IHJlY3RCb3guaGVpZ2h0O1xuICBub2RlLmRpZmYgPSAtbm9kZS5wYWRkaW5nIC8gMjtcbiAgbm9kZS5pbnRlcnNlY3QgPSBmdW5jdGlvbihwb2ludCkge1xuICAgIHJldHVybiBpbnRlcnNlY3RSZWN0KG5vZGUsIHBvaW50KTtcbiAgfTtcbiAgcmV0dXJuIHNoYXBlU3ZnO1xufTtcbmNvbnN0IHNoYXBlcyA9IHsgcmVjdCwgcm91bmRlZFdpdGhUaXRsZSwgbm90ZUdyb3VwLCBkaXZpZGVyIH07XG5sZXQgY2x1c3RlckVsZW1zID0ge307XG5jb25zdCBpbnNlcnRDbHVzdGVyID0gKGVsZW0sIG5vZGUpID0+IHtcbiAgbG9nLnRyYWNlKFwiSW5zZXJ0aW5nIGNsdXN0ZXJcIik7XG4gIGNvbnN0IHNoYXBlID0gbm9kZS5zaGFwZSB8fCBcInJlY3RcIjtcbiAgY2x1c3RlckVsZW1zW25vZGUuaWRdID0gc2hhcGVzW3NoYXBlXShlbGVtLCBub2RlKTtcbn07XG5jb25zdCBjbGVhciA9ICgpID0+IHtcbiAgY2x1c3RlckVsZW1zID0ge307XG59O1xuY29uc3QgcmVjdXJzaXZlUmVuZGVyID0gYXN5bmMgKF9lbGVtLCBncmFwaCwgZGlhZ3JhbXR5cGUsIGlkLCBwYXJlbnRDbHVzdGVyKSA9PiB7XG4gIGxvZy5pbmZvKFwiR3JhcGggaW4gcmVjdXJzaXZlIHJlbmRlcjogWFhYXCIsIGdyYXBobGliSnNvbi53cml0ZShncmFwaCksIHBhcmVudENsdXN0ZXIpO1xuICBjb25zdCBkaXIgPSBncmFwaC5ncmFwaCgpLnJhbmtkaXI7XG4gIGxvZy50cmFjZShcIkRpciBpbiByZWN1cnNpdmUgcmVuZGVyIC0gZGlyOlwiLCBkaXIpO1xuICBjb25zdCBlbGVtID0gX2VsZW0uaW5zZXJ0KFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJyb290XCIpO1xuICBpZiAoIWdyYXBoLm5vZGVzKCkpIHtcbiAgICBsb2cuaW5mbyhcIk5vIG5vZGVzIGZvdW5kIGZvclwiLCBncmFwaCk7XG4gIH0gZWxzZSB7XG4gICAgbG9nLmluZm8oXCJSZWN1cnNpdmUgcmVuZGVyIFhYWFwiLCBncmFwaC5ub2RlcygpKTtcbiAgfVxuICBpZiAoZ3JhcGguZWRnZXMoKS5sZW5ndGggPiAwKSB7XG4gICAgbG9nLnRyYWNlKFwiUmVjdXJzaXZlIGVkZ2VzXCIsIGdyYXBoLmVkZ2UoZ3JhcGguZWRnZXMoKVswXSkpO1xuICB9XG4gIGNvbnN0IGNsdXN0ZXJzID0gZWxlbS5pbnNlcnQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBcImNsdXN0ZXJzXCIpO1xuICBjb25zdCBlZGdlUGF0aHMgPSBlbGVtLmluc2VydChcImdcIikuYXR0cihcImNsYXNzXCIsIFwiZWRnZVBhdGhzXCIpO1xuICBjb25zdCBlZGdlTGFiZWxzID0gZWxlbS5pbnNlcnQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBcImVkZ2VMYWJlbHNcIik7XG4gIGNvbnN0IG5vZGVzID0gZWxlbS5pbnNlcnQoXCJnXCIpLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVzXCIpO1xuICBhd2FpdCBQcm9taXNlLmFsbChcbiAgICBncmFwaC5ub2RlcygpLm1hcChhc3luYyBmdW5jdGlvbih2KSB7XG4gICAgICBjb25zdCBub2RlID0gZ3JhcGgubm9kZSh2KTtcbiAgICAgIGlmIChwYXJlbnRDbHVzdGVyICE9PSB2b2lkIDApIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocGFyZW50Q2x1c3Rlci5jbHVzdGVyRGF0YSkpO1xuICAgICAgICBsb2cuaW5mbyhcIlNldHRpbmcgZGF0YSBmb3IgY2x1c3RlciBYWFggKFwiLCB2LCBcIikgXCIsIGRhdGEsIHBhcmVudENsdXN0ZXIpO1xuICAgICAgICBncmFwaC5zZXROb2RlKHBhcmVudENsdXN0ZXIuaWQsIGRhdGEpO1xuICAgICAgICBpZiAoIWdyYXBoLnBhcmVudCh2KSkge1xuICAgICAgICAgIGxvZy50cmFjZShcIlNldHRpbmcgcGFyZW50XCIsIHYsIHBhcmVudENsdXN0ZXIuaWQpO1xuICAgICAgICAgIGdyYXBoLnNldFBhcmVudCh2LCBwYXJlbnRDbHVzdGVyLmlkLCBkYXRhKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbG9nLmluZm8oXCIoSW5zZXJ0KSBOb2RlIFhYWFwiICsgdiArIFwiOiBcIiArIEpTT04uc3RyaW5naWZ5KGdyYXBoLm5vZGUodikpKTtcbiAgICAgIGlmIChub2RlICYmIG5vZGUuY2x1c3Rlck5vZGUpIHtcbiAgICAgICAgbG9nLmluZm8oXCJDbHVzdGVyIGlkZW50aWZpZWRcIiwgdiwgbm9kZS53aWR0aCwgZ3JhcGgubm9kZSh2KSk7XG4gICAgICAgIGNvbnN0IG8gPSBhd2FpdCByZWN1cnNpdmVSZW5kZXIobm9kZXMsIG5vZGUuZ3JhcGgsIGRpYWdyYW10eXBlLCBpZCwgZ3JhcGgubm9kZSh2KSk7XG4gICAgICAgIGNvbnN0IG5ld0VsID0gby5lbGVtO1xuICAgICAgICB1cGRhdGVOb2RlQm91bmRzKG5vZGUsIG5ld0VsKTtcbiAgICAgICAgbm9kZS5kaWZmID0gby5kaWZmIHx8IDA7XG4gICAgICAgIGxvZy5pbmZvKFwiTm9kZSBib3VuZHMgKGFiYzEyMylcIiwgdiwgbm9kZSwgbm9kZS53aWR0aCwgbm9kZS54LCBub2RlLnkpO1xuICAgICAgICBzZXROb2RlRWxlbShuZXdFbCwgbm9kZSk7XG4gICAgICAgIGxvZy53YXJuKFwiUmVjdXJzaXZlIHJlbmRlciBjb21wbGV0ZSBcIiwgbmV3RWwsIG5vZGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGdyYXBoLmNoaWxkcmVuKHYpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBsb2cuaW5mbyhcIkNsdXN0ZXIgLSB0aGUgbm9uIHJlY3Vyc2l2ZSBwYXRoIFhYWFwiLCB2LCBub2RlLmlkLCBub2RlLCBncmFwaCk7XG4gICAgICAgICAgbG9nLmluZm8oZmluZE5vbkNsdXN0ZXJDaGlsZChub2RlLmlkLCBncmFwaCkpO1xuICAgICAgICAgIGNsdXN0ZXJEYltub2RlLmlkXSA9IHsgaWQ6IGZpbmROb25DbHVzdGVyQ2hpbGQobm9kZS5pZCwgZ3JhcGgpLCBub2RlIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbG9nLmluZm8oXCJOb2RlIC0gdGhlIG5vbiByZWN1cnNpdmUgcGF0aFwiLCB2LCBub2RlLmlkLCBub2RlKTtcbiAgICAgICAgICBhd2FpdCBpbnNlcnROb2RlKG5vZGVzLCBncmFwaC5ub2RlKHYpLCBkaXIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgKTtcbiAgZ3JhcGguZWRnZXMoKS5mb3JFYWNoKGZ1bmN0aW9uKGUpIHtcbiAgICBjb25zdCBlZGdlID0gZ3JhcGguZWRnZShlLnYsIGUudywgZS5uYW1lKTtcbiAgICBsb2cuaW5mbyhcIkVkZ2UgXCIgKyBlLnYgKyBcIiAtPiBcIiArIGUudyArIFwiOiBcIiArIEpTT04uc3RyaW5naWZ5KGUpKTtcbiAgICBsb2cuaW5mbyhcIkVkZ2UgXCIgKyBlLnYgKyBcIiAtPiBcIiArIGUudyArIFwiOiBcIiwgZSwgXCIgXCIsIEpTT04uc3RyaW5naWZ5KGdyYXBoLmVkZ2UoZSkpKTtcbiAgICBsb2cuaW5mbyhcIkZpeFwiLCBjbHVzdGVyRGIsIFwiaWRzOlwiLCBlLnYsIGUudywgXCJUcmFuc2xhdGVpbmc6IFwiLCBjbHVzdGVyRGJbZS52XSwgY2x1c3RlckRiW2Uud10pO1xuICAgIGluc2VydEVkZ2VMYWJlbChlZGdlTGFiZWxzLCBlZGdlKTtcbiAgfSk7XG4gIGdyYXBoLmVkZ2VzKCkuZm9yRWFjaChmdW5jdGlvbihlKSB7XG4gICAgbG9nLmluZm8oXCJFZGdlIFwiICsgZS52ICsgXCIgLT4gXCIgKyBlLncgKyBcIjogXCIgKyBKU09OLnN0cmluZ2lmeShlKSk7XG4gIH0pO1xuICBsb2cuaW5mbyhcIiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1wiKTtcbiAgbG9nLmluZm8oXCIjIyMgICAgICAgICAgICAgICAgTGF5b3V0ICAgICAgICAgICAgICAgICAjIyNcIik7XG4gIGxvZy5pbmZvKFwiIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXCIpO1xuICBsb2cuaW5mbyhncmFwaCk7XG4gIGxheW91dChncmFwaCk7XG4gIGxvZy5pbmZvKFwiR3JhcGggYWZ0ZXIgbGF5b3V0OlwiLCBncmFwaGxpYkpzb24ud3JpdGUoZ3JhcGgpKTtcbiAgbGV0IGRpZmYgPSAwO1xuICBzb3J0Tm9kZXNCeUhpZXJhcmNoeShncmFwaCkuZm9yRWFjaChmdW5jdGlvbih2KSB7XG4gICAgY29uc3Qgbm9kZSA9IGdyYXBoLm5vZGUodik7XG4gICAgbG9nLmluZm8oXCJQb3NpdGlvbiBcIiArIHYgKyBcIjogXCIgKyBKU09OLnN0cmluZ2lmeShncmFwaC5ub2RlKHYpKSk7XG4gICAgbG9nLmluZm8oXG4gICAgICBcIlBvc2l0aW9uIFwiICsgdiArIFwiOiAoXCIgKyBub2RlLngsXG4gICAgICBcIixcIiArIG5vZGUueSxcbiAgICAgIFwiKSB3aWR0aDogXCIsXG4gICAgICBub2RlLndpZHRoLFxuICAgICAgXCIgaGVpZ2h0OiBcIixcbiAgICAgIG5vZGUuaGVpZ2h0XG4gICAgKTtcbiAgICBpZiAobm9kZSAmJiBub2RlLmNsdXN0ZXJOb2RlKSB7XG4gICAgICBwb3NpdGlvbk5vZGUobm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChncmFwaC5jaGlsZHJlbih2KS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGluc2VydENsdXN0ZXIoY2x1c3RlcnMsIG5vZGUpO1xuICAgICAgICBjbHVzdGVyRGJbbm9kZS5pZF0ubm9kZSA9IG5vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwb3NpdGlvbk5vZGUobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgZ3JhcGguZWRnZXMoKS5mb3JFYWNoKGZ1bmN0aW9uKGUpIHtcbiAgICBjb25zdCBlZGdlID0gZ3JhcGguZWRnZShlKTtcbiAgICBsb2cuaW5mbyhcIkVkZ2UgXCIgKyBlLnYgKyBcIiAtPiBcIiArIGUudyArIFwiOiBcIiArIEpTT04uc3RyaW5naWZ5KGVkZ2UpLCBlZGdlKTtcbiAgICBjb25zdCBwYXRocyA9IGluc2VydEVkZ2UoZWRnZVBhdGhzLCBlLCBlZGdlLCBjbHVzdGVyRGIsIGRpYWdyYW10eXBlLCBncmFwaCwgaWQpO1xuICAgIHBvc2l0aW9uRWRnZUxhYmVsKGVkZ2UsIHBhdGhzKTtcbiAgfSk7XG4gIGdyYXBoLm5vZGVzKCkuZm9yRWFjaChmdW5jdGlvbih2KSB7XG4gICAgY29uc3QgbiA9IGdyYXBoLm5vZGUodik7XG4gICAgbG9nLmluZm8odiwgbi50eXBlLCBuLmRpZmYpO1xuICAgIGlmIChuLnR5cGUgPT09IFwiZ3JvdXBcIikge1xuICAgICAgZGlmZiA9IG4uZGlmZjtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4geyBlbGVtLCBkaWZmIH07XG59O1xuY29uc3QgcmVuZGVyID0gYXN5bmMgKGVsZW0sIGdyYXBoLCBtYXJrZXJzLCBkaWFncmFtdHlwZSwgaWQpID0+IHtcbiAgaW5zZXJ0TWFya2VycyhlbGVtLCBtYXJrZXJzLCBkaWFncmFtdHlwZSwgaWQpO1xuICBjbGVhciQyKCk7XG4gIGNsZWFyJDMoKTtcbiAgY2xlYXIoKTtcbiAgY2xlYXIkMSgpO1xuICBsb2cud2FybihcIkdyYXBoIGF0IGZpcnN0OlwiLCBKU09OLnN0cmluZ2lmeShncmFwaGxpYkpzb24ud3JpdGUoZ3JhcGgpKSk7XG4gIGFkanVzdENsdXN0ZXJzQW5kRWRnZXMoZ3JhcGgpO1xuICBsb2cud2FybihcIkdyYXBoIGFmdGVyOlwiLCBKU09OLnN0cmluZ2lmeShncmFwaGxpYkpzb24ud3JpdGUoZ3JhcGgpKSk7XG4gIGF3YWl0IHJlY3Vyc2l2ZVJlbmRlcihlbGVtLCBncmFwaCwgZGlhZ3JhbXR5cGUsIGlkKTtcbn07XG5leHBvcnQge1xuICByZW5kZXIgYXMgclxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mermaid/dist/index-2c4b9a3b.js\n");

/***/ })

}]);