(self.webpackChunkclarity_cec_1=self.webpackChunkclarity_cec_1||[]).push([[4470],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(n),u=i,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||r;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},93686:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));n(38516);const r={id:"cec1_data",title:"CEC1 Data",sidebar_label:"CEC1 Data",sidebar_position:5},l=void 0,o={unversionedId:"cec1/cec1_data",id:"cec1/cec1_data",title:"CEC1 Data",description:"To obtain the data and baseline code, please see the download page.",source:"@site/docs/cec1/cec1_data.mdx",sourceDirName:"cec1",slug:"/cec1/cec1_data",permalink:"/docs/cec1/cec1_data",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"cec1_data",title:"CEC1 Data",sidebar_label:"CEC1 Data",sidebar_position:5},sidebar:"tutorialSidebar1",previous:{title:"Baseline System",permalink:"/docs/cec1/cec1_baseline"},next:{title:"Software",permalink:"/docs/cec1/cec1_software"}},s={},d=[{value:"A. Training, development, evaluation data",id:"a-training-development-evaluation-data",level:2},{value:"B. The scene dataset",id:"b-the-scene-dataset",level:2},{value:"B.1 Training data",id:"b1-training-data",level:3},{value:"B.2 Development data",id:"b2-development-data",level:3},{value:"B.3 Evaluation scene data",id:"b3-evaluation-scene-data",level:3},{value:"C Listener data",id:"c-listener-data",level:2},{value:"C.1 Training and development data",id:"c1-training-and-development-data",level:3},{value:"C.2 Evaluation data",id:"c2-evaluation-data",level:3},{value:"D Data file formats and naming conventions",id:"d-data-file-formats-and-naming-conventions",level:2},{value:"D.1 Abbreviations in Filenames",id:"d1-abbreviations-in-filenames",level:3},{value:"D.2 General",id:"d2-general",level:3},{value:"D.3 Prompt and transcription data",id:"d3-prompt-and-transcription-data",level:3},{value:"D.4 Source audio files",id:"d4-source-audio-files",level:3},{value:"D.5 Preprocessed scene signals",id:"d5-preprocessed-scene-signals",level:3},{value:"D.6 Enhanced signals",id:"d6-enhanced-signals",level:3},{value:"D.7 Enhanced signals processed by the hearing loss model",id:"d7-enhanced-signals-processed-by-the-hearing-loss-model",level:3},{value:"D.8 Scene metadata",id:"d8-scene-metadata",level:3},{value:"D.9 Listener metadata",id:"d9-listener-metadata",level:3},{value:"D.10 Scene-Listener map",id:"d10-scene-listener-map",level:3}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To obtain the data and baseline code, please see the download page."),(0,i.kt)("h2",{id:"a-training-development-evaluation-data"},"A. Training, development, evaluation data"),(0,i.kt)("p",null,"The dataset is split into these three subsets: training (",(0,i.kt)("inlineCode",{parentName:"p"},"train"),"), development (",(0,i.kt)("inlineCode",{parentName:"p"},"dev"),") and evaluation (",(0,i.kt)("inlineCode",{parentName:"p"},"eval"),")."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You should only train on the training set."),(0,i.kt)("li",{parentName:"ul"},"The system submitted should be chosen on the evidence provided by the development set."),(0,i.kt)("li",{parentName:"ul"},"The final listening and ranking will be performed with the (held-out) evaluation set."),(0,i.kt)("li",{parentName:"ul"},"For more information on supplementing the training data, please see the rules. The evaluation dataset will be made available one month before the challenge submission deadline.")),(0,i.kt)("h2",{id:"b-the-scene-dataset"},"B. The scene dataset"),(0,i.kt)("p",null,"The complete dataset is composed of 10,000 scenes split into the following sets:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Training (6000 scenes, 24 speakers);"),(0,i.kt)("li",{parentName:"ul"},"Development (2500 scenes, 10 speakers);"),(0,i.kt)("li",{parentName:"ul"},"Evaluation (1500 scenes, 6 speakers).")),(0,i.kt)("p",null,"Each scene corresponds to a unique target utterance and a unique segment of noise from an interferer. The training, development and evaluation sets are disjoint for target speaker. The three sets are balanced for target speaker gender."),(0,i.kt)("p",null,"Binaural Room Impulse Responses (BRIRs) are used to model how the sound is altered as it propagates through the room and interacts with the head. The audio signals for the scenes are generated by convolving source signals with the BRIRs and summing. See the page on modelling the scenario for more details. Randomised room dimensions, target and interferer locations are used."),(0,i.kt)("p",null,"The BRIRs are generated for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A hearing aid with 3 microphone inputs (front, mid, rear). The hearing aid has a Behind-The-Ear (BTE) form factor; see Figure 1. The distance between microphones is approx. 7.6 mm. The properties of the tube and ear mould are not considered."),(0,i.kt)("li",{parentName:"ul"},"Close to the eardrum."),(0,i.kt)("li",{parentName:"ul"},"The anechoic target reference (front microphone).")),(0,i.kt)("img",{src:"../img/tutorial/BTE-e1606144768702.png",width:"200"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Figure 1. Front (Fr), Middle (Mid) and Rear microphones on a BTE hearing aid form.")),(0,i.kt)("p",null,"Head Related Impulse Responses (HRIRs) are used to model how sound is altered as it propagates in a free-field and interacts with the head (i.e., no room is included). These are taken from the OlHeadHRTF database with permission. These include HRIRs for human heads and for three types of head-and-torso simulator/mannekin. The eardrum HRIRs (labelled ED) are for a position close to the eardrum of the open ear."),(0,i.kt)("p",null,"rpf files are specification files for the geometric room acoustic model that include a complete description of the room."),(0,i.kt)("h3",{id:"b1-training-data"},"B.1 Training data"),(0,i.kt)("p",null,"For each scene in the training data the following signals and metadata are available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The target and interferer BRIRs (4 pairs: front, mid, rear and eardrum for left and right ears)."),(0,i.kt)("li",{parentName:"ul"},"HRIRs including those corresponding to the target azimuth."),(0,i.kt)("li",{parentName:"ul"},"The mono target and interferer signals (pre-convolution)."),(0,i.kt)("li",{parentName:"ul"},"For each hearing aid microphone (channels 1-3 where channel 1 is front, channel 2 is mid and channel 3 is rear) and a position close to the eardrum (channel 0):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The target convolved with the appropriate BRIR;"),(0,i.kt)("li",{parentName:"ul"},"The interferer convolved with the appropriate BRIR;"),(0,i.kt)("li",{parentName:"ul"},"The sum of the target and interferer convolved."))),(0,i.kt)("li",{parentName:"ul"},"The target convolved with the anechoic BRIR (channel 1) for each ear (\u2018target_anechoic\u2019)."),(0,i.kt)("li",{parentName:"ul"},"Metadata describing the scene: a JSON file containing, e.g., the filenames of the sources, the location of the sources, the viewvector of the target source, the location and viewvector of the receiver, the room dimensions (see specification below), and the room number, which corresponds to the RAVEN BRIR, rpf and ac files.")),(0,i.kt)("p",null,"Software for generating more training data is also available."),(0,i.kt)("h3",{id:"b2-development-data"},"B.2 Development data"),(0,i.kt)("p",null,"The same data as for the training will be made available to allow you to fully examine the performance of your system. Note, that the data available for the evaluation will be much more limited (see B.3)."),(0,i.kt)("p",null,"For each scene, during development, your hearing aid enhancement model must only use the following input signals/data:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The sum of the target and interferer \u2013 mixed at the SNR specified in the scene metadata \u2013 at one or more hearing aid microphones (CH1, CH2 and/or CH3)."),(0,i.kt)("li",{parentName:"ul"},"The IDs of the listeners assigned to the scene in the metadata provided."),(0,i.kt)("li",{parentName:"ul"},"The audiograms of these listeners.")),(0,i.kt)("h3",{id:"b3-evaluation-scene-data"},"B.3 Evaluation scene data"),(0,i.kt)("p",null,"For each scene in the evaluation data only the following will be available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The sum of the target and interferer for each hearing aid microphone."),(0,i.kt)("li",{parentName:"ul"},"The ID of the evaluation panel members/listeners who will be listening to the processed scene."),(0,i.kt)("li",{parentName:"ul"},"The audiograms of these listeners.")),(0,i.kt)("h2",{id:"c-listener-data"},"C Listener data"),(0,i.kt)("h3",{id:"c1-training-and-development-data"},"C.1 Training and development data"),(0,i.kt)("p",null,"A sample of pure tone air-conduction audiograms that characterise the hearing impairment of potential listeners, split into training and development sets."),(0,i.kt)("h3",{id:"c2-evaluation-data"},"C.2 Evaluation data"),(0,i.kt)("p",null,"You will be given the left and right pure tone air-conduction audiograms for the listening panel, so the signals you generate for evaluation can be individualised to the listeners."),(0,i.kt)("p",null,"A panel of 50 hearing-aided listeners will be recruited for the evaluation panel. We plan that they will be experienced bilateral hearing-aid users (they use two hearing aids but the hearing loss may be asymmetrical) with an averaged hearing loss as measured by pure tone air-conduction of between 25 and about 60 dB in the better ear, with fluent speaking of (and listening to) British English."),(0,i.kt)("h2",{id:"d-data-file-formats-and-naming-conventions"},"D Data file formats and naming conventions"),(0,i.kt)("h3",{id:"d1-abbreviations-in-filenames"},"D.1 Abbreviations in Filenames"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"R")," \u2013 \u201croom\u201d:  e.g., \u201cR02678\u201d   # Room ID linking to RAVEN rpf file"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"S")," \u2013  \u201cscene\u201d:  e.g., S00121  # Scene ID for a particular setup in a room I.e., room + choice of target and interferer signals"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BNC")," \u2013 BNC sentence identifier  e.g. BNC_A06_01702"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH")," \u2013",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH0")," \u2013 eardrum signal"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH1")," \u2013 front signal, hearing aid channel"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH2")," \u2013 middle signal, hearing aid channel"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH3")," \u2013 rear signal, hearing aid channel"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"I"),"/",(0,i.kt)("inlineCode",{parentName:"li"},"i1")," \u2013 Interferer, i.e., noise or sentence ID for the interferer/masker"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T")," \u2013 talker who produced the target speech sentences"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"L")," \u2013 listener"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"E")," \u2013 entrant (identifying a team participating in the challenge)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"t")," \u2013 target (used in BRIRs and RAVEN project \u2018rpf\u2019 files)")),(0,i.kt)("h3",{id:"d2-general"},"D.2 General"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Audio and BRIRs will be 44.1 kHz 32 bit wav files in either mono or stereo as appropriate."),(0,i.kt)("li",{parentName:"ul"},"Where stereo signals are provided the two channels represent the left and right signals of the ear or hearing aid microphones. "),(0,i.kt)("li",{parentName:"ul"},"HRIRs have a sampling rate of 48 kHz."),(0,i.kt)("li",{parentName:"ul"},"Metadata will be stored in JSON format wherever possible."),(0,i.kt)("li",{parentName:"ul"},"Room descriptions are stored as RAVEN project \u2018rpf\u2019 configuration files."),(0,i.kt)("li",{parentName:"ul"},"Signals are saved within the Python code as 32-bit floating point by default.")),(0,i.kt)("h3",{id:"d3-prompt-and-transcription-data"},"D.3 Prompt and transcription data"),(0,i.kt)("p",null,"The following text is available for the target speech:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Prompts are the text that was supposed to be spoken as presented to the readers."),(0,i.kt)("li",{parentName:"ul"},"\u2018Dot\u2019 transcriptions contain the text as it was spoken in a form more suitable for scoring tools."),(0,i.kt)("li",{parentName:"ul"},"These are stored in the master json metadata file.")),(0,i.kt)("h3",{id:"d4-source-audio-files"},"D.4 Source audio files"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Wav files containing the original source materials."),(0,i.kt)("li",{parentName:"ul"},"Original target sentence recordings:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  <Talker ID>_<BNC sentence identifier>.wav\n")),(0,i.kt)("h3",{id:"d5-preprocessed-scene-signals"},"D.5 Preprocessed scene signals"),(0,i.kt)("p",null,"Audio files storing the signals picked up by the hearing aid microphone ready for processing. Separate signals are generated for each hearing aid microphone pair or \u2018channel\u2019."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<Scene ID>_target_<Channel ID>.wav\n<Scene ID>_interferer_<Channel ID>.wav\n<Scene ID>_mixed_<Channel ID>.wav\n<Scene ID>_target_anechoic.wav\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Scene ID")," \u2013  S00001  to S10000"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"S")," followed by 5 digit integer with 0 pre-padding")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Channel ID"),"   "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH0")," \u2013 Eardrum signal"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH1")," \u2013 Hearing aid front microphone"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH2")," \u2013 Hearing aid middle microphone"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CH3")," \u2013 Hearing aid rear microphone")),(0,i.kt)("h3",{id:"d6-enhanced-signals"},"D.6 Enhanced signals"),(0,i.kt)("p",null,"The signals that are output by the enhancement (hearing aid) model."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<Scene ID>_<Listener ID>_HA-output.wav")," #HA output signal (i.e., as submitted by the challenge entrants)")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Listener ID"),"  \u2013 ID of the listener panel member,  e.g., L001 to L100 for initial \u2018pseudo-listeners\u2019, etc.  We are no longer providing the script for post-processing signals in preparation for the listener panel."),(0,i.kt)("h3",{id:"d7-enhanced-signals-processed-by-the-hearing-loss-model"},"D.7 Enhanced signals processed by the hearing loss model"),(0,i.kt)("p",null,"The signals that are produced by the hearing loss (HL) model."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<Scene ID>_<Listener ID>_HL-output.wav")," HL output signal"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<Scene ID>_<Listener ID>_HL-mixoutput.wav"),"  HL-processed CH0 signal, bypassing HA processing, for comparison"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<Scene ID>_<Listener ID>_flat0dB_HL-output")," HL-output for flat 0 dB audiogram processed signal for comparison"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<Scene ID>_<Listener ID>_HLddf-output")," unit impulse signal output by HL model for time-alignment of signals before processing by the baseline speech intelligibility model")),(0,i.kt)("h3",{id:"d8-scene-metadata"},"D.8 Scene metadata"),(0,i.kt)("p",null,"JSON file containing a description of the scene and assigns the scene to a specific member of the listening panel. It is a hierarchical dictionary, with the top level being scenes indexed by unique scene ID, and each scene described by a second-level dictionary. Here, viewvector indicates the direction vector or line of sight."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'[\n   {\n     scene": "S00001", \n     "room": {\n       "name": "R00001",\n       "dimensions": "5.9x3.4186x2.9" # Room dimensions in metres\n     },\n     "SNR": 3.8356,\n     "hrirfilename": "VP_N5-ED", # HRIR filename\n     "target": { # target positions (x,y,z) and view vectors (look directions, x,y,z)\n       "Positions": [ \n         -0.5,\n         3.4,\n         1.2\n       ],\n       "ViewVectors": [\n         0.291,\n         -0.957,\n         0\n       ],\n       "name": "T022_HCS_00002", # target speaker code and BNCid\n       "nsamples": 153468, # length of target speech in samples\n     },\n     "listener": {\n       "Positions": [\n         0.2,\n         1.1,\n         1.2\n       ],\n       "ViewVectors": [\n         -0.414,\n         0.91,\n         0\n       ]\n     },\n     "interferer": {\n       "Positions": [\n         0.4,\n         3.2,\n         1.2\n       ],\n       "name": "CIN_dishwasher_012", # interferer name\n       "nsamples": 1190700, # interferer length in samples\n       "duration": 27, # interferer duration in seconds\n       "type": "noise", # interferer type: noise or speech\n       "offset": 182115, # interferer segment starts at n samples from beginning of recording\n       },\n     "azimuth_target_listener": -7.55, # angle azimuth in degrees of target for receiver\n     "azimuth_interferer_listener": -29.92, # angle azimuth in degrees of interferer for receiver\n     "dataset": "train", # dataset: train, dev or eval/test\n     "pre_samples": 88200, # number of samples of interferer before target onset\n     "post_samples": 44100 # number of samples of interferer after target offset\n   },\n   {\n    etc.\n   }\n ]\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"There are JSON files containing the scene specifications per dataset, e.g., scenes.train.json.- Note, that the scene ID and room ID might have a one-to-one mapping in the challenge, but are not necessarily the same. Multiple scenes can be made by changing the target and masker choices for a given room. E.g., participants wanting to expand the training data could remix multiple scenes from the same room."),(0,i.kt)("li",{parentName:"ul"},"A scene is completely described by the room ID and target and interferer source IDs, as all other information, e.g., source + target geometry are already in the RAVEN project rpf files. Only the room ID is needed to identify the BRIR files."),(0,i.kt)("li",{parentName:"ul"},"The listener ID is not stored in the scene metadata; this information is stored separately in a ",(0,i.kt)("inlineCode",{parentName:"li"},"scenes_listeners.json")," file."),(0,i.kt)("li",{parentName:"ul"},"Non-speech interferers are labelled ",(0,i.kt)("inlineCode",{parentName:"li"},"CIN_<noise type>_XXX"),", while speech interferers are labelled ",(0,i.kt)("inlineCode",{parentName:"li"},"<three letter code including dialect and talker gender>_XXXXX")," .")),(0,i.kt)("h3",{id:"d9-listener-metadata"},"D.9 Listener metadata"),(0,i.kt)("p",null,"Listener data stored in a single JSON file with the following format."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\u201cL0001\u201d: {\n    \u201cname\u201d: \u201cL0001\u201d,\n"audiogram_cfs": [250, 500, 1000, 2000, 3000, 4000, 6000, 8000],\n    \u201caudiogram_levels_l\u201d: [10, 10, 20, 30, 40, 55, 55, 60],\n    \u201caudiogram_levels_r\u201d: [ \u2026 ],\n          },\n\u201cL0002\u201d: {\n    },\n...\n}\n')),(0,i.kt)("h3",{id:"d10-scene-listener-map"},"D.10 Scene-Listener map"),(0,i.kt)("p",null,"JSON file named scenes_listeners.json dictates which scenes are to be processed by which listeners."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\u201cS00001\u201d: [\u201cL0001\u201d, \u201cL0002\u201d, \u201cL0003\u201d],\n\u201cS00002\u201d: [\u201cL0003\u201d. \u201cL0005\u201d, \u201cL0007\u201d],\netc\n}\n")))}c.isMDXComponent=!0},11748:(e,t,n)=>{var a={"./locale":89234,"./locale.js":89234};function i(e){var t=r(e);return n(t)}function r(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}i.keys=function(){return Object.keys(a)},i.resolve=r,e.exports=i,i.id=11748}}]);