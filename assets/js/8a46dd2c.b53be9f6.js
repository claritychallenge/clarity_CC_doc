"use strict";(self.webpackChunkclarity_cec_1=self.webpackChunkclarity_cec_1||[]).push([[7],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),b=i,h=u["".concat(l,".").concat(b)]||u[b]||d[b]||a;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},19769:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));n(8209);const a={id:"cpc2_baseline",title:"Baseline system",sidebar_label:"Baseline system",sidebar_position:4},o=void 0,c={unversionedId:"cpc2/cpc2_baseline",id:"cpc2/cpc2_baseline",title:"Baseline system",description:"The baseline CPC2 code will be available in the Github Clarity repository from March 6th.",source:"@site/docs/cpc2/cpc2_baseline.md",sourceDirName:"cpc2",slug:"/cpc2/cpc2_baseline",permalink:"/docs/cpc2/cpc2_baseline",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"cpc2_baseline",title:"Baseline system",sidebar_label:"Baseline system",sidebar_position:4},sidebar:"tutorialSidebar_cpc2",previous:{title:"Challenge rules",permalink:"/docs/cpc2/cpc2_rules"},next:{title:"Taking Part",permalink:"/docs/category/taking-part-2"}},l={},s=[{value:"References",id:"references",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The baseline CPC2 code will be available in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/claritychallenge/clarity"},"Github Clarity repository")," from March 6th.")),(0,i.kt)("p",null,"A baseline intrusive intelligibility prediction system has been provided to help you get started."),(0,i.kt)("p",null,"The baseline uses the existing HASPI model ","[",(0,i.kt)("a",{parentName:"p",href:"#refs"},"1"),"] to make its predictions. HASPI is an intrusive measure that takes a processed signal, a reference and a listener audiogram and outputs an intelligibility score between 0 and 1. The HASPI output is then passed through a sigmoid function, the parameters of which have been optimised on the training data to minimise the RMSE between the predicted and measured intelligibility scores. The output of the logistic is taken to be the sentence intelligibility prediction."),(0,i.kt)("p",null,"The baseline is distributed as part of the pyclarity Python package (",(0,i.kt)("inlineCode",{parentName:"p"},"pyclarity")," >=0.3.0), which is available on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/claritychallenge/clarity"},"Github"),". The relevant scripts can be found in the recipes directory, ",(0,i.kt)("inlineCode",{parentName:"p"},"recipes/cpc2/baseline"),". Download the code from Github and follow the instructions in the CPC2 baseline recipes's ",(0,i.kt)("inlineCode",{parentName:"p"},"README")," to run the baseline on the CPC2 dataset."),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("a",{name:"refs"}),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Kates, J.M. and Arehart, K.H., 2021. The hearing-aid speech perception index (haspi) version 2. Speech Communication, 131, pp.35-46.")))}d.isMDXComponent=!0}}]);