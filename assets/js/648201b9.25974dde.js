(self.webpackChunkclarity_cec_1=self.webpackChunkclarity_cec_1||[]).push([[88],{3905:(e,t,r)=>{"use strict";r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,h=u["".concat(s,".").concat(m)]||u[m]||f[m]||i;return r?n.createElement(h,l(l({ref:t},p),{},{components:r})):n.createElement(h,l({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5541:(e,t,r)=>{"use strict";r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),i=(r(398),r(4996));const l={id:"cec2_baseline",title:"Baseline System",sidebar_label:"Baseline System",sidebar_position:3},o=void 0,s={unversionedId:"cec2/software/cec2_baseline",id:"cec2/software/cec2_baseline",title:"Baseline System",description:"Challenge entrants are supplied with a fully functioning baseline system. Figure 1 shows a simplified schematic:",source:"@site/docs/cec2/software/cec2_baseline.mdx",sourceDirName:"cec2/software",slug:"/cec2/software/cec2_baseline",permalink:"/docs/cec2/software/cec2_baseline",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"cec2_baseline",title:"Baseline System",sidebar_label:"Baseline System",sidebar_position:3},sidebar:"tutorialSidebar_cec2",previous:{title:"Software",permalink:"/docs/category/software"},next:{title:"Core Software",permalink:"/docs/cec2/software/cec2_core_software"}},c={},p=[{value:"Baseline performance",id:"baseline-performance",level:2},{value:"References",id:"references",level:2}],u={toc:p};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Challenge entrants are supplied with a fully functioning baseline system. ",(0,a.kt)("a",{parentName:"p",href:"#fig1"},"Figure 1")," shows a simplified schematic:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A scene generator (blue box) creates speech in noise."),(0,a.kt)("li",{parentName:"ul"},"The hearing aid model then enhances this (yellow box)."),(0,a.kt)("li",{parentName:"ul"},"The enhancement is individualised for each listener with quantified hearing characteristics, hence there is also a system to select a random listener (white ellipse)."),(0,a.kt)("li",{parentName:"ul"},"The Improved SPIN (speech in noise) that is outputted from your hearing aid, is then passed to the prediction stage (orange box). We are using the Hearing-Aid Speech Perception Index (HASPI) as the objective metric to estimate speech intelligibility ","[",(0,a.kt)("a",{parentName:"li",href:"#refs"},"1"),"].")),(0,a.kt)("figure",{id:"fig1"},(0,a.kt)("img",{width:"800",src:(0,i.Z)("/img/CEC2/baseline.png")}),(0,a.kt)("figcaption",null,"Figure 1, The baseline, for simplicity, not all signal paths are shown.")),(0,a.kt)("p",null,"Your challenge is to improve what happens in the yellow enhancement box. You are free to use any parts of the baseline that are useful to you, and reconfigure the system as you feel fit."),(0,a.kt)("p",null,"More details of the different parts of the baseline appear on the ",(0,a.kt)("a",{parentName:"p",href:"./cec2_core_software"},"core software page"),", see,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./cec2_core_software#a-scene-generator"},"Scene Generator")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./cec2_core_software#b-baseeline-hearing-aid-processor"},"Hearing aid model")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./cec2_core_software#e-speech-intelligibility-model"},"Speech intelligibility model"))),(0,a.kt)("p",null,"The code for the baseline system, and all supporting Clarity code, is available on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/claritychallenge/clarity"},"GitHub"),"."),(0,a.kt)("h2",{id:"baseline-performance"},"Baseline performance"),(0,a.kt)("p",null,"The average speech intelligibility (HASPI) score for the unprocessed development test set is 0.1615. When processed with the simple baseline hearing aid (i.e., NALR amplification followed by a simple automatic gain compressor) the average HASPI score increases to 0.2493. These results are summarised in the table below. Your task is to improve on the 0.2493 baseline HASPI score."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"System"),(0,a.kt)("th",{parentName:"tr",align:null},"HASPI"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Unprocessed"),(0,a.kt)("td",{parentName:"tr",align:null},"0.1615")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NAL-R baseline"),(0,a.kt)("td",{parentName:"tr",align:null},"0.2493")))),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("a",{name:"refs"}),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Kates, J.M. and Arehart, K.H., 2021. The hearing-aid speech perception index (haspi) version 2. Speech Communication, 131, pp.35-46.")))}f.isMDXComponent=!0},1748:(e,t,r)=>{var n={"./locale":9234,"./locale.js":9234};function a(e){var t=i(e);return r(t)}function i(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=i,e.exports=a,a.id=1748}}]);